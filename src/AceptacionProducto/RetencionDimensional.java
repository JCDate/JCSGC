package AceptacionProducto;

import Modelos.AceptacionPc1;
import Modelos.AceptacionPc2;
import Modelos.AceptacionPc3;
import Modelos.AceptacionProducto;
import Modelos.Usuarios;
import Servicios.AceptacionProductoServicio;
import Servicios.Conexion;
import Servicios.ExcelEditor;
import Servicios.Utilidades;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;
import java.net.URLEncoder;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class RetencionDimensional extends javax.swing.JFrame {

    // Usuario y Conexión a la Base de Datos
    private Usuarios usr;
    private Connection conexion;

    // Objetos para manejar la información de Aceptación Producto
    private AceptacionPc1 apc1;
    private AceptacionPc1 apc1Auxiliar;
    private AceptacionPc2 apc2;
    private AceptacionPc3 apc3;
    private AceptacionPc3 nuevosDatos;
    private AceptacionProducto ap = new AceptacionProducto();
    
    // Servicios y Utilidades
    private ExcelEditor xls = new ExcelEditor();
    private AceptacionProductoServicio aps = new AceptacionProductoServicio();

    private List<AceptacionPc2> ap2m = new ArrayList<>();
    private List<AceptacionPc3> ap3m = new ArrayList<>();
    private List<AceptacionPc3> listNuevosDatos = new ArrayList<>();

    private static final int COLUMN_NO_FECHA = 0;
    private static final int COLUMN_NO_OP = 1;
    private static final int COLUMN_NO_TROQUEL = 2;
    private static final int COLUMN_VARIABLE = 3;
    private static final int COLUMN_ESPECIFICACION = 4;
    private static final int COLUMN_VALOR = 5;

    private DefaultTableModel modeloTabla;

    public RetencionDimensional() {
        inicializarVentanaYComponentes();
    }

    public RetencionDimensional(Usuarios usr) {
        this.usr = usr;
        inicializarVentanaYComponentes();
    }

    public RetencionDimensional(Usuarios usr, AceptacionPc1 apc1) {
        this.usr = usr;
        this.apc1 = apc1;
        inicializarVentanaYComponentes();
    }

    public RetencionDimensional(Usuarios usr, AceptacionPc1 apc1, AceptacionPc2 apc2) {
        this.usr = usr;
        this.apc1 = apc1;
        this.apc2 = apc2;

        inicializarVentanaYComponentes();

        txtComponente.setText(apc1.getComponente());
        txtNoParte.setText(apc1.getNoParte());
        txtNoOperaciones.setText(apc1.getNoOps());

        txtNoOrden.setText(apc2.getNoOrden());
        txtInspector.setText(apc2.getInspector());
        txtTamLote.setText(apc2.getTamLote());
        txtTamMta.setText(apc2.getTamMta());
        txtTurno.setText(apc2.getTurno());
        txtDisp.setText(apc2.getDisp());
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJCIcono = new javax.swing.JLabel();
        lblRetencionDimensional = new javax.swing.JLabel();
        btnPlanControl = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRD = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblNoOrden = new javax.swing.JLabel();
        lblTamLote = new javax.swing.JLabel();
        lblTamMuestra = new javax.swing.JLabel();
        txtNoOrden = new swing.TextField();
        txtTamLote = new swing.TextField();
        txtTamMta = new swing.TextField();
        txtInspector = new swing.TextField();
        txtTurno = new swing.TextField();
        lblTurno = new javax.swing.JLabel();
        lblDisp = new javax.swing.JLabel();
        txtDisp = new swing.TextField();
        lblInsp = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblComponente = new javax.swing.JLabel();
        lblNoParte = new javax.swing.JLabel();
        txtNoParte = new swing.TextField();
        lblNoOperaciones = new javax.swing.JLabel();
        txtNoOperaciones = new swing.TextField();
        txtComponente = new swing.TextField();
        btnRegresar = new javax.swing.JButton();
        pnlPC = new javax.swing.JPanel();
        lblVariable = new javax.swing.JLabel();
        lblNoOp = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        txtFecha = new swing.TextField();
        cbxVariable = new swing.ComboBoxSuggestion();
        txtValor = new swing.TextField();
        btnAceptar = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        lblEspecificacion = new javax.swing.JLabel();
        cbxEspecificacionPLG = new swing.ComboBoxSuggestion();
        txtEspecificacionPLG = new swing.TextField();
        lblProcesoCritico = new javax.swing.JLabel();
        cbxProcesoCritico = new swing.JCheckBoxCustom(new Color(255,0,0));
        btnAgregarVariable = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        lblFecha = new javax.swing.JLabel();
        txtNoOp = new swing.TextField();
        txtNoTroquel = new swing.TextField();
        lblNoTroquel = new javax.swing.JLabel();
        btnGuardar = new swing.Button(new Color(121, 190, 255),new Color(10, 110, 255));
        btnEliminar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        btnActualizar = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        btnModificar = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblRetencionDimensional.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        lblRetencionDimensional.setForeground(new java.awt.Color(10, 110, 255));
        lblRetencionDimensional.setText("RETENCIÓN DIMENSIONAL");
        jPanel1.add(lblRetencionDimensional, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        btnPlanControl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPlanControl.setForeground(new java.awt.Color(255, 255, 255));
        btnPlanControl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/PDF.png"))); // NOI18N
        btnPlanControl.setText("PLAN DE CONTROL");
        btnPlanControl.setActionCommand("<html><center>Ver</center>Plan de Control</html>");
        btnPlanControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlanControlActionPerformed(evt);
            }
        });
        jPanel1.add(btnPlanControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 610, 200, 40));

        tblRD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblRD);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 770, 490));

        jPanel3.setBackground(new java.awt.Color(32, 163, 211));
        jPanel3.setForeground(new java.awt.Color(95, 158, 180));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNoOrden.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoOrden.setForeground(new java.awt.Color(255, 255, 255));
        lblNoOrden.setText("NO. ORDEN:");
        jPanel3.add(lblNoOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        lblTamLote.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTamLote.setForeground(new java.awt.Color(255, 255, 255));
        lblTamLote.setText("TAM. LOTE:");
        jPanel3.add(lblTamLote, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        lblTamMuestra.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTamMuestra.setForeground(new java.awt.Color(255, 255, 255));
        lblTamMuestra.setText("TAM. MTA:");
        jPanel3.add(lblTamMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        jPanel3.add(txtNoOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 90, -1));

        txtTamLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTamLoteActionPerformed(evt);
            }
        });
        jPanel3.add(txtTamLote, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 90, -1));
        jPanel3.add(txtTamMta, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 90, -1));
        jPanel3.add(txtInspector, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 80, -1));
        jPanel3.add(txtTurno, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 80, -1));

        lblTurno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTurno.setForeground(new java.awt.Color(255, 255, 255));
        lblTurno.setText("TURNO:");
        jPanel3.add(lblTurno, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));

        lblDisp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDisp.setForeground(new java.awt.Color(255, 255, 255));
        lblDisp.setText("DISP:");
        jPanel3.add(lblDisp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));
        jPanel3.add(txtDisp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 80, -1));

        lblInsp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblInsp.setForeground(new java.awt.Color(255, 255, 255));
        lblInsp.setText("INSP:");
        jPanel3.add(lblInsp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 370, 140));

        jPanel4.setBackground(new java.awt.Color(32, 163, 211));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblComponente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblComponente.setForeground(new java.awt.Color(255, 255, 255));
        lblComponente.setText("COMPONENTE:");
        jPanel4.add(lblComponente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        lblNoParte.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoParte.setForeground(new java.awt.Color(255, 255, 255));
        lblNoParte.setText("NO. PARTE:");
        jPanel4.add(lblNoParte, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, -1, 20));
        jPanel4.add(txtNoParte, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 140, -1));

        lblNoOperaciones.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoOperaciones.setForeground(new java.awt.Color(255, 255, 255));
        lblNoOperaciones.setText("NO. OPERACIONES:");
        jPanel4.add(lblNoOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, 150, -1));
        jPanel4.add(txtNoOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 20, 80, -1));

        txtComponente.setEnabled(false);
        jPanel4.add(txtComponente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 140, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 1040, 70));

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/boton_regresar.png"))); // NOI18N
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, 150, 50));

        pnlPC.setBackground(new java.awt.Color(32, 163, 211));
        pnlPC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblVariable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblVariable.setForeground(new java.awt.Color(255, 255, 255));
        lblVariable.setText("VARIABLE:");
        pnlPC.add(lblVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        lblNoOp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoOp.setForeground(new java.awt.Color(255, 255, 255));
        lblNoOp.setText("NO. OP:");
        pnlPC.add(lblNoOp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        lblValor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblValor.setForeground(new java.awt.Color(255, 255, 255));
        lblValor.setText("VALOR:");
        pnlPC.add(lblValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));
        pnlPC.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 280, -1));

        pnlPC.add(cbxVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 260, -1));
        pnlPC.add(txtValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 290, -1));

        btnAceptar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setText("ACEPTAR");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        pnlPC.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 200, -1));

        lblEspecificacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEspecificacion.setForeground(new java.awt.Color(255, 255, 255));
        lblEspecificacion.setText("ESPECIFICACIÓN PLG:");
        pnlPC.add(lblEspecificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        pnlPC.add(cbxEspecificacionPLG, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 180, 30));
        pnlPC.add(txtEspecificacionPLG, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 180, -1));

        lblProcesoCritico.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProcesoCritico.setForeground(new java.awt.Color(255, 255, 255));
        lblProcesoCritico.setText("PROCESO CRÍTICO: ");
        pnlPC.add(lblProcesoCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
        pnlPC.add(cbxProcesoCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 30, 30));

        btnAgregarVariable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAgregarVariable.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarVariable.setText("AGREGAR VARIABLE");
        btnAgregarVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarVariableActionPerformed(evt);
            }
        });
        pnlPC.add(btnAgregarVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 160, -1));

        lblFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("FECHA:");
        pnlPC.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        pnlPC.add(txtNoOp, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 280, -1));
        pnlPC.add(txtNoTroquel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 240, -1));

        lblNoTroquel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoTroquel.setForeground(new java.awt.Color(255, 255, 255));
        lblNoTroquel.setText("NO. TROQUEL:");
        pnlPC.add(lblNoTroquel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jPanel1.add(pnlPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 370, 340));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Guardar.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 620, 140, 30));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Eliminar.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 610, 80, 40));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/actualizar.png"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 610, 80, 40));

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/modificar.png"))); // NOI18N
        btnModificar.setToolTipText("");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 610, 80, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTamLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTamLoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTamLoteActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        cerrarVentana();
        aps.abrirAceptacionProductoGUI2(usr);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnPlanControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlanControlActionPerformed
        String componenteCodificado = "";
        if (txtComponente.getText() != null) {
            String componentePc = txtComponente.getText();
            try {
                componenteCodificado = URLEncoder.encode(componentePc, "UTF-8");
            } catch (UnsupportedEncodingException ex) {
                Utilidades.manejarExcepcion("Surgio un error al consultar el PLAN DE CONTROL", ex);
            }
        }

        String rutaPHP = "http://192.168.1.75/produccion/php/PlanDeControlCuadro.php?componente=" + componenteCodificado;

        try {
            aps.abrirUrlEnNavegador(rutaPHP);
        } catch (IOException | URISyntaxException ex) {
            Utilidades.manejarExcepcion("Error al abrir la URL en el navegador", ex);
        }
    }//GEN-LAST:event_btnPlanControlActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Set<String> valoresPermitidos = new HashSet<>(Arrays.asList("1", "2", "3", "4", "5", "if", "IF"));
        String especificacion = obtenerEspecificacionPLG();

        if (valoresPermitidos.contains(txtNoOp.getText())) {
            if (aps.verificarRango(especificacion, txtValor.getText())) {
                if (txtComponente.getText() != null) {
                    String componente = txtComponente.getText();
                    String noTroquel = txtNoTroquel.getText();

                    String fecha = apc1.getFecha();
                    String noOp = "if".equalsIgnoreCase(txtNoOp.getText()) ? "IF" : txtNoOp.getText();

                    String variable = obtenerVariableFormateada();
                    String especificacionPLG = obtenerEspecificacionPLG();
                    String valor = txtValor.getText();
                    int procesoCritico = cbxProcesoCritico.isSelected() ? 1 : 0;

                    Object[] filaDatos = {fecha, noOp, noTroquel, variable, especificacionPLG, valor};
                    nuevosDatos = new AceptacionPc3("", componente, noOp, noTroquel, fecha, variable, especificacionPLG, valor, procesoCritico);

                    listNuevosDatos.add(nuevosDatos);
                    modeloTabla.addRow(filaDatos);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "El número de Operación es incorrecto", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            int noOperacion = Integer.parseInt(txtNoOperaciones.getText());

            if (noOperacion < 1 || noOperacion > 5) {
                JOptionPane.showMessageDialog(this, "El número de operaciones debe estar en el rango del 1 al 5", "Alerta", JOptionPane.WARNING_MESSAGE);
            } else {
                setAceptacionPc1();
                setAceptacionPc2();
                try {
                    if (!aps.existeRegistroPc1(conexion, apc1)) {
                        aps.agregarpc1(conexion, apc1);
                    }

                    if (!aps.existeRegistroPc2(conexion, apc2)) {
                        aps.agregarpc2(conexion, apc2);
                    } else {
                        aps.modificarOrden(conexion, apc2);
                    }

                    List<AceptacionPc3> nuevosDatosFiltrados = aps.filtrarNuevosDatos(conexion, listNuevosDatos);
                    aps.agregarpc3(conexion, nuevosDatosFiltrados);

                    String retencionDimensional = xls.generarExcelRD(conexion, ap3m, apc2);
                    this.ap.setComponente(txtComponente.getText());
                    this.ap.setRdPdf(aps.leerArchivo(retencionDimensional));
                    aps.subirRD(conexion, ap);
                    cerrarVentana();
                    aps.abrirAceptacionProductoGUI(usr);

                } catch (IOException | ClassNotFoundException | SQLException ex) {
                    Utilidades.manejarExcepcion("Surgio un error al Guardar los Datos", ex);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarVariableActionPerformed
        cerrarVentana();
        setAceptacionPc1();
        setAceptacionPc2();
        aps.abrirAgregarVariableGUI(usr, apc1, apc2);
    }//GEN-LAST:event_btnAgregarVariableActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        setAceptacionPc1();
        setAceptacionPc2();

        cerrarVentana();
        JOptionPane.showMessageDialog(this, "DATOS ACTUALIZADOS");
        aps.abrirRetencionDimensionalGUI(usr, apc1, apc2);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tblRD.getSelectedRow();
        if (filaSeleccionada != -1) { // Devuelve -1 cuando no hay ninguna fila seleccionada

            String fecha = (String) tblRD.getValueAt(filaSeleccionada, COLUMN_NO_FECHA);
            String noOp = (String) tblRD.getValueAt(filaSeleccionada, COLUMN_NO_OP);
            String variable = (String) tblRD.getValueAt(filaSeleccionada, COLUMN_VARIABLE);
            String especificacion = (String) tblRD.getValueAt(filaSeleccionada, COLUMN_ESPECIFICACION);
            String valor = (String) tblRD.getValueAt(filaSeleccionada, COLUMN_VALOR);

            apc3.setFecha(fecha);
            apc3.setNoOp(noOp);
            apc3.setVariable(variable);
            apc3.setEspecificacion(especificacion);
            apc3.setValor(valor);

            int respuesta = JOptionPane.showConfirmDialog(this, "LA INFORMACIÓN SELECCIONADA SE ELIMINARÁ, ¿ESTÁS DE ACUERDO?", "ALERTA", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);

            if (respuesta == JOptionPane.YES_OPTION) {
                eliminarRegistro(apc3);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int filaSeleccionada = tblRD.getSelectedRow();
        if (filaSeleccionada > 0) {
            setAceptacionPc1();
            setAceptacionPc2();

            cerrarVentana();
            aps.abrirModificarRDGUI(this.ap3m.get(filaSeleccionada), usr, apc1, apc2);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione una fila, es posible que necesite guardar primero la información");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void inicializarVentanaYComponentes() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.ap3m = new ArrayList<>();

        this.modeloTabla = new DefaultTableModel(new String[]{"Fecha", "No Op", "No Troquel", "Variable", "Especificación", "Valor"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        txtComponente.setText(apc1.getComponente());
        this.conexion = Conexion.getInstance().getConnection();
        try {
            apc2 = aps.buscarOrden(conexion, apc1);
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Error al Buscar la orden en Retención Dimensional", ex);
            Logger.getLogger(RetencionDimensional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            initComponentes();
            initListeners();
        } catch (ClassNotFoundException ex) {
            Utilidades.manejarExcepcion("Error al cargar los componentes y la información en Retención Dimensional", ex);
            Logger.getLogger(RetencionDimensional.class.getName()).log(Level.SEVERE, null, ex);
        }

        tblRD.setModel(modeloTabla);
        tblRD.setRowHeight(32);

        TableColumnModel columnModel = tblRD.getColumnModel();

        setColumnWidth(columnModel.getColumn(0), 90);
        setColumnWidth(columnModel.getColumn(1), 60);
        setColumnWidth(columnModel.getColumn(5), 60);

        txtFecha.setText(apc1.getFecha());
        txtFecha.setEnabled(false);
        info();
    }

    private void initListeners() {
        try {
            cbxVariable.removeAllItems();
            String componenteSeleccionado = apc1.getComponente();
            List<String> variablesPlanControl = aps.obtenerVariablesPC(conexion, componenteSeleccionado);
            List<String> variablesLista = aps.obtenerVariables(conexion);
            this.apc1Auxiliar = aps.recuperarInfoPc1(conexion, componenteSeleccionado);
            this.ap3m = aps.recuperarAP3(conexion, apc1.getComponente());
            datosTabla();

            txtNoParte.setText(apc1Auxiliar.getNoParte());
            txtNoOperaciones.setText(apc1Auxiliar.getNoOps());

            if (variablesPlanControl.isEmpty()) {
                deshabilitarBotonPlanControl();
                variablesLista.forEach(cbxVariable::addItem);
                txtEspecificacionPLG.setVisible(true);
            } else {
                habilitarBotonPlanControl();
                variablesPlanControl.forEach(cbxVariable::addItem);
                obtenerEspecificaciones();
                btnAgregarVariable.setVisible(false);
                txtEspecificacionPLG.setVisible(false);

            }
        } catch (SQLException | ClassNotFoundException ex) {
            Utilidades.manejarExcepcion("Surgio un Error al inicializar los componentes", ex);
        }

        cbxVariable.addActionListener((ActionEvent ae) -> {
            obtenerEspecificaciones();
        });

    }

    private void initComponentes() throws ClassNotFoundException {
        try {
            this.ap2m = aps.recuperarAP2(conexion, txtComponente.getText());
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Surgio un Error al inicializar los componentes", ex);
        }
    }

    public void obtenerEspecificaciones() {
        cbxEspecificacionPLG.removeAllItems();
        Object variableSeleccionada = cbxVariable.getSelectedItem();
        if (variableSeleccionada != null) {
            String variable = variableSeleccionada.toString();
            String componente = apc1.getComponente();
            try {
                aps.obtenerEspecificaciones(conexion, variable, componente).forEach(cbxEspecificacionPLG::addItem);
            } catch (SQLException ex) {
                Utilidades.manejarExcepcion("Surgió un error al obtener las especificaciones", ex);
            }
        }
    }

    private void setAceptacionPc1() {
        apc1.setNoParte(txtNoParte.getText());
        apc1.setNoOps(txtNoOperaciones.getText());
    }

    private void setAceptacionPc2() {
        String componente = txtComponente.getText();
        String fechap = apc1.getFecha();
        String noOrden = txtNoOrden.getText();
        String tamLote = txtTamLote.getText();
        String tamMta = txtTamMta.getText();
        String inspector = txtInspector.getText();
        String turno = txtTurno.getText();
        String disp = txtDisp.getText();
        apc2 = new AceptacionPc2("", componente, fechap, noOrden, tamLote, tamMta, inspector, turno, disp);
    }

    private void deshabilitarBotonPlanControl() {
        btnPlanControl.setEnabled(false);
        cbxEspecificacionPLG.setVisible(false);
        txtEspecificacionPLG.setVisible(true);
    }

    private void habilitarBotonPlanControl() {
        btnPlanControl.setEnabled(true);
        cbxEspecificacionPLG.setVisible(true);
        txtEspecificacionPLG.setVisible(false);
    }

    public void datosTabla() throws SQLException, ClassNotFoundException {
        modeloTabla.setRowCount(0);

        if (this.ap3m != null) {
            this.ap3m.stream().map((apc3) -> {
                Object fila[] = new Object[6];
                fila[COLUMN_NO_FECHA] = apc3.getFecha();
                fila[COLUMN_NO_OP] = apc3.getNoOp();
                fila[COLUMN_NO_TROQUEL] = apc3.getNoTroquel();
                fila[COLUMN_VARIABLE] = apc3.getVariable();
                fila[COLUMN_ESPECIFICACION] = apc3.getEspecificacion();
                fila[COLUMN_VALOR] = apc3.getValor();
                return fila;
            }).forEachOrdered((fila) -> {
                modeloTabla.addRow(fila);
            });
        } else {
            System.out.println("la ap3m esta vacía");
        }
    }

    private void cerrarVentana() {
        RetencionDimensional.this.dispose();
    }

    private String obtenerEspecificacionPLG() {
        String especificacionPLG;
        if (cbxEspecificacionPLG.getSelectedItem() != null) {
            especificacionPLG = cbxEspecificacionPLG.getSelectedItem().toString();
        } else {
            especificacionPLG = txtEspecificacionPLG.getText();
        }
        return especificacionPLG;
    }

    private String obtenerVariableSeleccionada() {
        Object selectedVariable = cbxVariable.getSelectedItem();
        return selectedVariable != null ? selectedVariable.toString() : "";
    }

    private String obtenerVariableFormateada() {
        String variable = cbxProcesoCritico.isSelected() ? "C " + obtenerVariableSeleccionada() : obtenerVariableSeleccionada();
        return variable;
    }

    public final void info() {
        txtNoOrden.setText(apc2.getNoOrden());
        txtInspector.setText("JC");
        txtTamLote.setText("400");
        txtTamMta.setText("3");
        txtDisp.setText("A");
        txtTurno.setText("1");
    }

    private void setColumnWidth(TableColumn column, int width) {
        column.setMinWidth(width);
        column.setMaxWidth(width);
    }

    private void eliminarRegistro(AceptacionPc3 apc3) {
        setAceptacionPc1();
        setAceptacionPc2();

        aps.eliminarpc3(conexion, apc3);
        cerrarVentana();
        JOptionPane.showMessageDialog(this, "DATOS ELIMINADOS");
        aps.abrirRetencionDimensionalGUI(usr, apc1, apc2);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RetencionDimensional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RetencionDimensional().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregarVariable;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnPlanControl;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbxEspecificacionPLG;
    private javax.swing.JCheckBox cbxProcesoCritico;
    private javax.swing.JComboBox<String> cbxVariable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComponente;
    private javax.swing.JLabel lblDisp;
    private javax.swing.JLabel lblEspecificacion;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblInsp;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblNoOp;
    private javax.swing.JLabel lblNoOperaciones;
    private javax.swing.JLabel lblNoOrden;
    private javax.swing.JLabel lblNoParte;
    private javax.swing.JLabel lblNoTroquel;
    private javax.swing.JLabel lblProcesoCritico;
    private javax.swing.JLabel lblRetencionDimensional;
    private javax.swing.JLabel lblTamLote;
    private javax.swing.JLabel lblTamMuestra;
    private javax.swing.JLabel lblTurno;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblVariable;
    private javax.swing.JPanel pnlPC;
    private javax.swing.JTable tblRD;
    private javax.swing.JTextField txtComponente;
    private javax.swing.JTextField txtDisp;
    private javax.swing.JTextField txtEspecificacionPLG;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtInspector;
    private javax.swing.JTextField txtNoOp;
    private javax.swing.JTextField txtNoOperaciones;
    private javax.swing.JTextField txtNoOrden;
    private javax.swing.JTextField txtNoParte;
    private javax.swing.JTextField txtNoTroquel;
    private javax.swing.JTextField txtTamLote;
    private javax.swing.JTextField txtTamMta;
    private javax.swing.JTextField txtTurno;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
