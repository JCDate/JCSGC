package AceptacionProducto;

import Modelos.AceptacionPc1;
import Modelos.AceptacionPc2;
import Modelos.AceptacionProductoM;
import Modelos.DatosFilaRD;
import Modelos.Usuarios;
import Servicios.AceptacionProductoServicio;
import Servicios.Conexion;
import Servicios.Utilidades;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

public class ModificarAPGUI extends javax.swing.JFrame {

    // Atributos
    private Usuarios usuario; // Usuario autenticado en la aplicación
    private Connection conexion; // Conexión a la Base de Datos
    private List<String> listaFechas; // Almacena las fechas de registros de los componentes
    private String componenteAnterior; // Valida que el componente no haya cambiado
    private AceptacionPc1 aceptacionPc1; // Objeto para el manejo de información del componente
    private AceptacionPc2 aceptacionPc2; // Objeto para el manejo de información del componente
    private DefaultTableModel modeloTabla; // Define de la estructura de la tabla
    private AceptacionProductoServicio aps; // Servicio para manejar la aceptación de productos
    private List<DatosFilaRD> listaDatosRD; // Objeto para el manejo de la información de los registros de retención Dimensional del componente
    private AceptacionProductoM aceptacionProducto; // Instacia de los datos del componente seleccionado
    private Set<Integer> filasModificadas = new HashSet<>(); // Almacena información evitando duplicidad

    public ModificarAPGUI() {
        initComponents();
    }

    public ModificarAPGUI(Usuarios usuario, AceptacionProductoM aceptacionProducto) {
        this.usuario = usuario;
        this.aceptacionProducto = aceptacionProducto;
        this.aceptacionPc1 = new AceptacionPc1();
        this.aceptacionPc2 = new AceptacionPc2();
        inicializarVentanaYComponentes();
    }

    @Override
    public Image getIconImage() { // Método para cambiar el icono en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCerrar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        cbxFecha = new swing.ComboBoxSuggestion();
        lblComponente = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        btnGuardar = new swing.Button(new Color(121, 190, 255),new Color(10, 110, 255));
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAceptacionPc2 = new javax.swing.JTable();
        txtComponente = new swing.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(10, 110, 255));
        lblTitulo.setText("MODIFICAR DATOS");
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, 72));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 140, 50));

        jPanel1.add(cbxFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 100, 220, 30));

        lblComponente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblComponente.setForeground(new java.awt.Color(10, 110, 255));
        lblComponente.setText("COMPONENTE:");
        jPanel1.add(lblComponente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        lblFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(10, 110, 255));
        lblFecha.setText("FECHA:");
        jPanel1.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 110, -1, -1));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Guardar.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 480, 160, 50));

        tblAceptacionPc2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "INSP. VISUAL", "NO. ROLLO", "OBSERVACIONES", "NUMERO DE ORDEN", "TAMAÑO DE LOTE", "TAMAÑO DE MUESTRA", "INSPECTOR", "TURNO", "DISP"
            }
        ));
        tblAceptacionPc2.setRowHeight(30);
        jScrollPane1.setViewportView(tblAceptacionPc2);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 1130, 330));

        txtComponente.setEditable(false);
        txtComponente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtComponente.setToolTipText("");
        jPanel1.add(txtComponente, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 230, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (filasModificadas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay cambios para guardar.");
            return;
        }

        filasModificadas.forEach((fila) -> {
            try {
                capturarInformacion(fila);
                aps.modificarInfoRetencionDimensional(conexion, listaDatosRD.get(fila));
            } catch (SQLException ex) {
                Utilidades.manejarExcepcion("ERROR al guardar la información: ", ex);
                Logger.getLogger(ModificarAPGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        filasModificadas.clear();
        cerrarVentana();
        JOptionPane.showMessageDialog(this, "DATOS ACTUALIZADOS CORRECTAMENTE");
        aps.abrirModificarAPGUI(usuario, aceptacionProducto);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
        aps.abrirAceptacionProductoGUI(usuario);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void inicializarVentanaYComponentes() {
        try {
            configurarVentana();
            inicializarAtributos();
            inicializarListeners();
            definirValoresComponentes();
            actualizarDatosTabla();
            mostrarDatosTabla();
        } catch (SQLException | ClassNotFoundException ex) {
            Utilidades.manejarExcepcion("Error al Abrir ModificarAPGUI: ", ex);
            Logger.getLogger(ModificarAPGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configurarVentana() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    private void inicializarAtributos() throws SQLException {
        this.conexion = Conexion.getInstance().conectar();
        this.aps = new AceptacionProductoServicio();
        this.modeloTabla = (DefaultTableModel) tblAceptacionPc2.getModel();
        this.listaDatosRD = new ArrayList<>();
        this.listaFechas = aps.obtenerFechasRetencionDimensional(conexion, aceptacionProducto.getComponente());
    }

    private void inicializarListeners() {
        cbxFecha.addActionListener((ActionEvent ae) -> {
            actualizarDatosTabla();
        });
    }

    private void definirValoresComponentes() {
        txtComponente.setText(aceptacionProducto.getComponente());
        listaFechas.forEach(cbxFecha::addItem);
    }

    private void actualizarDatosTabla() {
        try {
            limpiarTabla();
            String componenteSeleccionado = txtComponente.getText();
            if (!esFechaSeleccionadaValida()) {
                JOptionPane.showMessageDialog(this, "Por favor, seleccione una fecha válida.");
                return;
            }

            listaDatosRD = aps.obtenerInfoRetencionDimensional(conexion, componenteSeleccionado, cbxFecha.getSelectedItem().toString());
            mostrarDatosTabla();
            inicializarListener();
        } catch (SQLException | ClassNotFoundException ex) {
            Utilidades.manejarExcepcion("Error al recuperar la información: ", ex);
            Logger.getLogger(ModificarAPGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean esFechaSeleccionadaValida() {
        Object seleccionado = cbxFecha.getSelectedItem();
        return seleccionado != null && !seleccionado.toString().isEmpty();
    }

    private void mostrarDatosTabla() throws SQLException, ClassNotFoundException {
        limpiarTabla();
        llenarTabla();
    }

    private void limpiarTabla() {
        modeloTabla.setRowCount(0);
    }

    private void llenarTabla() {
        if (listaDatosRD != null && !listaDatosRD.isEmpty()) {
            listaDatosRD.forEach(datoRD -> {
                Object[] fila = crearFila(datoRD);
                modeloTabla.addRow(fila);
            });
        } else {
            JOptionPane.showMessageDialog(this, "La Lista AceptacionPc2 esta vacía");
        }
    }

    private Object[] crearFila(DatosFilaRD datoRD) {
        Object fila[] = new Object[9];
        fila[0] = datoRD.getInspVisual();
        fila[1] = datoRD.getNoRollo();
        fila[2] = datoRD.getObservaciones();
        fila[3] = datoRD.getNoOrden();
        fila[4] = datoRD.getTamLote();
        fila[5] = datoRD.getTamMta();
        fila[6] = datoRD.getInsp();
        fila[7] = datoRD.getTurno();
        fila[8] = datoRD.getDisp();
        return fila;
    }

    private void inicializarListener() {
        modeloTabla.addTableModelListener(e -> {
            if (e.getType() == TableModelEvent.UPDATE) {
                int fila = e.getFirstRow();
                filasModificadas.add(fila);  // Marcar la fila como modificada
            }
        });
    }

    private void capturarInformacion(int fila) {
        listaDatosRD.get(fila).setInspVisual((String) modeloTabla.getValueAt(fila, 0));
        listaDatosRD.get(fila).setNoRollo((String) modeloTabla.getValueAt(fila, 1));
        listaDatosRD.get(fila).setObservaciones((String) modeloTabla.getValueAt(fila, 2));
        listaDatosRD.get(fila).setNoOrden((String) modeloTabla.getValueAt(fila, 3));
        listaDatosRD.get(fila).setTamLote((String) modeloTabla.getValueAt(fila, 4));
        listaDatosRD.get(fila).setTamMta((String) modeloTabla.getValueAt(fila, 5));
        listaDatosRD.get(fila).setInsp((String) modeloTabla.getValueAt(fila, 6));
        listaDatosRD.get(fila).setTurno((String) modeloTabla.getValueAt(fila, 7));
        listaDatosRD.get(fila).setDisp((String) modeloTabla.getValueAt(fila, 8));
    }

    private void cerrarVentana() {
        ModificarAPGUI.this.dispose();
        Conexion.getInstance().desconectar(conexion);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarAPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ModificarAPGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbxFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComponente;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblAceptacionPc2;
    private javax.swing.JTextField txtComponente;
    // End of variables declaration//GEN-END:variables
}
