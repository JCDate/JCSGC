package APQP;

import BotonesAccion.TableActionCellEditor;
import BotonesAccion.TableActionEvent;
import BotonesAccion.TableActionCellRender;
import Modelos.ApqpM;
import Modelos.DoctosApqpM;
import Modelos.Usuarios;
import Servicios.ApqpServicio;
import Servicios.Conexion;
import Servicios.Utilidades;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class DocumentosApqpGUI extends javax.swing.JFrame {

    // Atributos
    private ApqpM actividad; // Instacia de la clase ApqpM para gestionar los documentos
    private Usuarios usuario; // Usuario autenticado en la aplicación
    private ApqpServicio apqps; // Servicio para manejar el control de documentos.
    private Connection conexion; // Conexión a la Base de Datos
    private DoctosApqpM documento; // Instancia para la gestión de los documentos dentro de la actividad
    private DefaultTableModel modeloTabla; // Definición de la estructura de la tabla
    private List<DoctosApqpM> listaDocumentos; // Lista de documentos del apqp

    public DocumentosApqpGUI() {
        initComponents();
    }

    public DocumentosApqpGUI(Usuarios usuario, ApqpM actividad) {
        this.usuario = usuario;
        this.actividad = actividad;
        inicializarVentanaYComponentes();
    }

    public DocumentosApqpGUI(Usuarios usuario, DoctosApqpM documento) {
        this.usuario = usuario;
        this.documento = documento;
        inicializarVentanaYComponentes();
    }

    @Override
    public Image getIconImage() { // Método para cambiar el icono en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJCIcono = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        btnCerrar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocumentosApqp = new javax.swing.JTable();
        btnAgregarDocto = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setForeground(new java.awt.Color(242, 242, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblTitulo.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(10, 110, 255));
        lblTitulo.setText("ANÁLISIS DE FACTIBILIDAD");
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, -1));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 130, 50));

        tblDocumentosApqp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE DEL DOCUMENTO", "OPERACIONES"
            }
        ));
        tblDocumentosApqp.setRowHeight(50);
        jScrollPane1.setViewportView(tblDocumentosApqp);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 650, -1));

        btnAgregarDocto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAgregarDocto.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarDocto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/1004733.png"))); // NOI18N
        btnAgregarDocto.setText("AGREGAR DOCUMENTO");
        btnAgregarDocto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDoctoActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarDocto, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 490, 250, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnAgregarDoctoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDoctoActionPerformed
        cerrarVentana();
        apqps.abrirAgregarDoctoApqpGUI(usuario, actividad, 1);
    }//GEN-LAST:event_btnAgregarDoctoActionPerformed

    private void inicializarVentanaYComponentes() {
        try {
            configurarVentana();
            inicializarAtributos();
            inicializarTabla();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Error al Abrir ApqpGUI: ", ex);
            Logger.getLogger(ApqpGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configurarVentana() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    private void inicializarAtributos() throws SQLException {
        this.apqps = new ApqpServicio();
        this.conexion = Conexion.getInstance().conectar();
        this.modeloTabla = (DefaultTableModel) tblDocumentosApqp.getModel();
    }

    private void inicializarTabla() {
        try {
            cargarDatosTabla();
            configurarAccionesTabla();
            mostrarDatosTabla();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Error al inicializar la tabla: ", ex);
            Logger.getLogger(ApqpGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarDatosTabla() throws SQLException {
        int id = (documento != null) ? documento.getIdp() : actividad.getId();
        this.listaDocumentos = apqps.recuperarDocumentos(conexion, id);
    }

    private void configurarAccionesTabla() {
        TableActionEvent event = crearTableActionEvent();
        tblDocumentosApqp.getColumnModel().getColumn(1).setCellRenderer(new TableActionCellRender(true, true, true, false, false, false));
        tblDocumentosApqp.getColumnModel().getColumn(1).setCellEditor(new TableActionCellEditor(event, true, true, true, false, false, false));
    }

    private TableActionEvent crearTableActionEvent() {
        return new TableActionEvent() {
            @Override
            public void onEdit(int row) {
                apqps.abrirAgregarDoctoApqpGUI(usuario, listaDocumentos.get(row), 2);
                cerrarVentana();
            }

            @Override
            public void onDelete(int row) {
                if (Utilidades.confirmarEliminacion()) {
                    eliminarDocumento(listaDocumentos.get(row));
                }
            }

            @Override
            public void onView(int row) {
                abrirDocumento(listaDocumentos.get(row));
            }

            @Override
            public void onOpenRecords(int row) {
                // Nada...
            }

            @Override
            public void onAccept(int row) {
                // Nada...
            }

            @Override
            public void onReject(int row) {
                // Nada...
            }
        };
    }

    private void mostrarDatosTabla() {
        limpiarTabla();
        llenarTabla();
    }

    private void limpiarTabla() {
        modeloTabla.setRowCount(0);
    }

    private void llenarTabla() {
        if (listaDocumentos != null && !listaDocumentos.isEmpty()) {
            listaDocumentos.forEach(docto -> {
                Object[] fila = crearFila(docto);
                modeloTabla.addRow(fila);
            });
        }
    }

    private Object[] crearFila(DoctosApqpM documento) {
        Object fila[];
        fila = new Object[2];
        fila[0] = documento.getNombreDocto();
        fila[1] = "OPERACIONES";
        return fila;
    }

    private void abrirDocumento(DoctosApqpM documento) {
        apqps.abrirDocumento(documento.getRutaArchivo());
    }

    private void eliminarDocumento(DoctosApqpM documento) {
        apqps.eliminarDocumento(conexion, documento);

        String urlArchivo = "\\\\" + Utilidades.SERVIDOR + "\\" + documento.getRutaArchivo(); // Ruta de red

        if (eliminarArchivo(urlArchivo)) {
            notificarActualizacion();
        } else {
            JOptionPane.showMessageDialog(this, "El archivo no se pudo eliminar o no existe.");
        }

        notificarActualizacion();
    }

    private boolean eliminarArchivo(String ruta) {
        File archivo = new File(ruta);
        return archivo.exists() && archivo.delete();
    }

    private void notificarActualizacion() {
        cerrarVentana();
        JOptionPane.showMessageDialog(this, "DATOS ELIMINADOS CORRECTAMENTE");
        abrirDocumentosGUI();
    }

    private void abrirDocumentosGUI() {
        if (actividad != null) {
            apqps.abrirDocumentosApqpGUI(usuario, actividad);
        } else {
            apqps.abrirDocumentosApqpGUI(usuario, documento);
        }
    }

    private void cerrarVentana() {
        DocumentosApqpGUI.this.dispose();
        Conexion.getInstance().desconectar(conexion);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocumentosApqpGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DocumentosApqpGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarDocto;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblDocumentosApqp;
    // End of variables declaration//GEN-END:variables
}
