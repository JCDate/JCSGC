package InspeccionRecibo;

import Modelos.AnchoLargoM;
import Modelos.DatosIRM;
import Modelos.InspeccionReciboM;
import Modelos.RugosidadDurezaM;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.InspeccionReciboServicio;
import Servicios.Utilidades;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

public class HojaInstruccionGUI extends javax.swing.JFrame {

    // Atributos
    private Usuarios usuario; // Usuario autenticado en la aplicación
    private Connection conexion; // Conexión a la Base de Datos
    private InspeccionReciboM inspeccionRecibo; // Manejo de la información del registro de la inspeccion
    private DatosIRM dirm; // Manejo de la información para generar la hoja de instrucción
    private List<AnchoLargoM> listaAnchoLargo; // Lista de valores de la tabla ancho/largo
    private List<String> listaInspectores; // Lista de los Inspectores de los registros de inspección
    private List<String> listaDescripcionesMP; // Lista de descripciones del calibre
    private List<String> listaMedidas; // Lista de los diferentes medidas del calibre
    private List<RugosidadDurezaM> listaRugosidadDureza; // Lista de valores de la tabla rugosidad/dureza
    private InspeccionReciboServicio irs; // Servicios y Utilidades

    public HojaInstruccionGUI() {
        initComponents();
    }

    public HojaInstruccionGUI(Usuarios usuario, InspeccionReciboM inspeccionRecibo) {
        this.usuario = usuario;
        this.inspeccionRecibo = inspeccionRecibo;
        this.dirm = new DatosIRM();
        inicializarVentanaYComponentes();
        definirDescripcionesYMedidas();
    }

    public HojaInstruccionGUI(Usuarios usuario, InspeccionReciboM inspeccionRecibo, DatosIRM dirm, List<AnchoLargoM> listaAnchoLargo, List<RugosidadDurezaM> listaRugosidadDureza) throws SQLException, ClassNotFoundException {
        this.usuario = usuario;
        this.inspeccionRecibo = inspeccionRecibo;
        this.dirm = dirm;
        this.listaAnchoLargo = listaAnchoLargo;
        this.listaRugosidadDureza = listaRugosidadDureza;
        inicializarVentanaYComponentes();
        definirDescripcionesYTablas();
    }

    @Override
    public Image getIconImage() { // Método para obtener y cambiar el icono de la aplicación en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblHojaInstrucciones = new javax.swing.JLabel();
        lblObeservacionesResultados = new javax.swing.JLabel();
        lblLecturaMuestreo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAnchoLargo = new javax.swing.JTable();
        lblDisposicionMateriaPrima = new javax.swing.JLabel();
        chkAceptacion = new swing.JCheckBoxCustom(new Color(20, 134, 255));
        chkRechazo = new swing.JCheckBoxCustom(new Color(255,0,0));
        lblJCIcono = new javax.swing.JLabel();
        lblFechaInspeccion = new javax.swing.JLabel();
        dchFechaInspeccion = new com.toedter.calendar.JDateChooser();
        lblPunto1 = new javax.swing.JLabel();
        lblInstruccionesInspeccion = new javax.swing.JLabel();
        lblPunto2 = new javax.swing.JLabel();
        lblNota = new javax.swing.JLabel();
        btnContinuar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtHojaInstrucciones = new swing.TextField();
        lblDescripcionMPR = new javax.swing.JLabel();
        lblCalibreLamina = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxNombreInspector = new swing.ComboBoxSuggestion();
        cbxObservacionesMP = new swing.ComboBoxSuggestion();
        txtObservacionesRD = new swing.TextField();
        cbxLamina = new swing.ComboBoxSuggestion();
        cbxDescripcionMP = new swing.ComboBoxSuggestion();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRugosidadDureza = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(1010, 630));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setMinimumSize(new java.awt.Dimension(1010, 630));
        jPanel1.setPreferredSize(new java.awt.Dimension(1010, 630));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHojaInstrucciones.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        lblHojaInstrucciones.setForeground(new java.awt.Color(10, 110, 255));
        lblHojaInstrucciones.setText("HOJA DE INSTRUCCIÓN");
        jPanel1.add(lblHojaInstrucciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        lblObeservacionesResultados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblObeservacionesResultados.setForeground(new java.awt.Color(76, 109, 255));
        lblObeservacionesResultados.setText("<html>OBSERVACIONES A LOS RESULTADOS DIMENSIONALES, PROPIEDADES MECÁNICAS Y REQUERIMIENTOS QUÍMICOS</html>");
        lblObeservacionesResultados.setToolTipText("");
        jPanel1.add(lblObeservacionesResultados, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 410, 40));

        lblLecturaMuestreo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLecturaMuestreo.setForeground(new java.awt.Color(76, 109, 255));
        lblLecturaMuestreo.setText("LECTURA DE MUESTREO:");
        jPanel1.add(lblLecturaMuestreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, -1, -1));

        tblAnchoLargo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ANCHO", "LARGO"
            }
        ));
        jScrollPane2.setViewportView(tblAnchoLargo);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 240, 190));

        lblDisposicionMateriaPrima.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDisposicionMateriaPrima.setForeground(new java.awt.Color(76, 109, 255));
        lblDisposicionMateriaPrima.setText("OBSERVACIONES A LA DISPOSICION DE LA MATERIA PRIMA:");
        jPanel1.add(lblDisposicionMateriaPrima, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, -1, -1));

        chkAceptacion.setText("Aceptación");
        chkAceptacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceptacionActionPerformed(evt);
            }
        });
        jPanel1.add(chkAceptacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 550, 100, 40));

        chkRechazo.setText("Rechazo");
        chkRechazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRechazoActionPerformed(evt);
            }
        });
        jPanel1.add(chkRechazo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 550, 90, 40));

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblFechaInspeccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFechaInspeccion.setForeground(new java.awt.Color(76, 109, 255));
        lblFechaInspeccion.setText("FECHA DE INSPECCIÓN: ");
        jPanel1.add(lblFechaInspeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));
        jPanel1.add(dchFechaInspeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 170, 30));

        lblPunto1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        lblPunto1.setForeground(new java.awt.Color(76, 109, 255));
        lblPunto1.setText("<html>1.- Deberán ser revisadas las propiedades mecánicas y la<br> composición química del material de acuerdo a especificaciones<br>tecnicas establecidas contra certificado de material (<strong>CM</strong>) si estas cumplen se marca con una (✓) o en su defecto, si no cumplen, una (X) en la columna <strong>CM</strong> correspondiente.</html>");
        jPanel1.add(lblPunto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, 370, 90));

        lblInstruccionesInspeccion.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblInstruccionesInspeccion.setForeground(new java.awt.Color(76, 109, 255));
        lblInstruccionesInspeccion.setText("Instrucciones para la Inspección:");
        jPanel1.add(lblInstruccionesInspeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, -1, -1));

        lblPunto2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        lblPunto2.setForeground(new java.awt.Color(76, 109, 255));
        lblPunto2.setText("<html>2.- Se evalua el aspecto dimensional, midiendo el espesor como<br> se indica en la figura.</html>");
        jPanel1.add(lblPunto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(633, 280, 370, 30));

        lblNota.setForeground(new java.awt.Color(76, 109, 255));
        lblNota.setText("<html><strong>NOTA:</strong> Si al menos un aspecto no se cumple, se rechaza el material y <br> actua conforme al procedimiento <strong>MP-7.10</strong></html>");
        jPanel1.add(lblNota, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 320, 370, -1));

        btnContinuar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/continuar.png"))); // NOI18N
        btnContinuar.setContentAreaFilled(false);
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });
        jPanel1.add(btnContinuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 550, -1, -1));

        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/boton_regresar.png"))); // NOI18N
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(76, 109, 255));
        jLabel1.setText("HOJA DE INSPECCIÓN No.");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 60, -1, -1));

        txtHojaInstrucciones.setEditable(false);
        jPanel1.add(txtHojaInstrucciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, 170, 30));

        lblDescripcionMPR.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDescripcionMPR.setForeground(new java.awt.Color(76, 109, 255));
        lblDescripcionMPR.setText("DESCRIPCIÓN DE MATERIA PRIMA RECIBIDA: ");
        jPanel1.add(lblDescripcionMPR, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        lblCalibreLamina.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCalibreLamina.setForeground(new java.awt.Color(76, 109, 255));
        lblCalibreLamina.setText("TOLERANCIA DE LAMINA:");
        jPanel1.add(lblCalibreLamina, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(76, 109, 255));
        jLabel2.setText("INSPECTOR:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, -1, -1));

        jPanel1.add(cbxNombreInspector, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 110, 270, 30));

        cbxObservacionesMP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MATERIAL DENTRO DE ESPECIFICACIÓN", "MATERIAL FUERA DE ESPECIFICACIÓN (CUARENTENA)", "MATERIAL DAÑADO DE ESPECIFICACIÓN (CUARENTENA)" }));
        jPanel1.add(cbxObservacionesMP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 440, 40));

        txtObservacionesRD.setText("SE LIBERAN ___ PIEZAS, CON UN TOTAL DE ___ KG");
        jPanel1.add(txtObservacionesRD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 390, 40));

        jPanel1.add(cbxLamina, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 360, 30));

        jPanel1.add(cbxDescripcionMP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 360, -1));

        tblRugosidadDureza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "RUGOSIDAD", "DUREZA"
            }
        ));
        jScrollPane1.setViewportView(tblRugosidadDureza);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 420, 400, 110));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkAceptacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceptacionActionPerformed
        chkRechazo.setSelected(false);
    }//GEN-LAST:event_chkAceptacionActionPerformed

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        configurarDatosIrm();
        cerrarVentana();
        irs.abrirEspecificacionesGUI(usuario, dirm, inspeccionRecibo, tblAnchoLargo, tblRugosidadDureza);
    }//GEN-LAST:event_btnContinuarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        cerrarVentana();
        irs.abrirInspeccionReciboGUI(usuario);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void chkRechazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRechazoActionPerformed
        chkAceptacion.setSelected(false);
    }//GEN-LAST:event_chkRechazoActionPerformed

    private void inicializarVentanaYComponentes() {
        try {
            configurarVentana();
            inicializarConexion();
            inicializarServicios();
            obtenerDatosDeArchivoXLSX();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("ERROR al Abrir HojaInstruccionGUI: ", ex);
            Logger.getLogger(HojaInstruccionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configurarVentana() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    private void inicializarConexion() throws SQLException {
        this.conexion = Conexion.getInstance().conectar();
    }

    private void inicializarServicios() {
        this.irs = new InspeccionReciboServicio();
    }

    private void obtenerDatosDeArchivoXLSX() {
        txtHojaInstrucciones.setText(String.valueOf(inspeccionRecibo.getNoHoja()));
        listaInspectores = irs.recuperarInspectores(conexion);
        listaInspectores.forEach(cbxNombreInspector::addItem);
    }

    private void definirDescripcionesYMedidas() {
        establecerFechaActual();
        configurarDescripcionesYMedidas();
    }

    private void establecerFechaActual() {
        Date fechaActual = Calendar.getInstance().getTime(); // Obtener la fecha actual
        dchFechaInspeccion.setDate(fechaActual);
    }

    private void configurarDescripcionesYMedidas() {
        listaDescripcionesMP = irs.recuperarDescripciones(conexion, inspeccionRecibo);
        listaDescripcionesMP.forEach(cbxDescripcionMP::addItem);

        listaMedidas = irs.recuperarMedidas(conexion, inspeccionRecibo);
        listaMedidas.forEach(cbxLamina::addItem);
    }

    private void definirDescripcionesYTablas() {
        configurarComponetes();
        actualizarTablas();
        actualizarCheckBoxes();
    }

    private void configurarComponetes() {
        cbxDescripcionMP.setSelectedItem(dirm.getDescripcionMP());
        cbxLamina.setSelectedItem(dirm.getCalibreLamina());

        Date fechaFormateada = irs.formatearFecha(dirm.getFechaInspeccion());
        dchFechaInspeccion.setDate(fechaFormateada);

        txtObservacionesRD.setText(dirm.getObservacionesRD());
        cbxObservacionesMP.setSelectedItem(dirm.getObsMP());
        cbxNombreInspector.setSelectedItem(dirm.getInspector());
    }

    private void actualizarTablas() {
        actualizarTablaAnchoLargo();
        actualizarTablaRugosidadDureza();
    }

    private void actualizarTablaAnchoLargo() {
        DefaultTableModel modeloTblAnchoLargo = (DefaultTableModel) tblAnchoLargo.getModel();
        modeloTblAnchoLargo.setRowCount(0); // Limpiar el modelo de tabla
        
        listaAnchoLargo.forEach(medida -> { // Agregar filas desde las listas
            modeloTblAnchoLargo.addRow(new Object[]{medida.getAncho(), medida.getLargo()});
        });
        
        modeloTblAnchoLargo.fireTableDataChanged(); // Asegurarse de que las tablas se actualicen visualmente
    }
    
    private void actualizarTablaRugosidadDureza() {
        DefaultTableModel modeloTblRugosidadDureza = (DefaultTableModel) tblRugosidadDureza.getModel();
        
        // Limpiar el modelo de tabla
        modeloTblRugosidadDureza.setRowCount(0);
        
        listaRugosidadDureza.forEach(rd -> { // Agregar filas desde las listas
            modeloTblRugosidadDureza.addRow(new Object[]{rd.getRugosidad(), rd.getDureza()});
        });
        
        modeloTblRugosidadDureza.fireTableDataChanged(); // Asegurarse de que las tablas se actualicen visualmente
    }

    private void actualizarCheckBoxes() {
        chkAceptacion.setSelected(dirm.getAceptacion() == 1);
        chkRechazo.setSelected(dirm.getAceptacion() != 1);
    }

    private void configurarDatosIrm() {
        obtenerFecha();
        configurarDatos();
    }
    
    private void obtenerFecha() {
        if (dchFechaInspeccion.getDate() != null) {
            Date fechaSeleccionada = dchFechaInspeccion.getDate();
            String fechaFormateada = irs.formatearFecha(fechaSeleccionada);
            dirm.setFechaInspeccion(fechaFormateada);
        }
    }
    
    private void configurarDatos() {
        dirm.setObsMP(cbxObservacionesMP.getSelectedItem().toString());
        dirm.setObservacionesRD(txtObservacionesRD.getText());
        dirm.setAceptacion(chkAceptacion.isSelected() ? 1 : 0);
        dirm.setNoHoja(txtHojaInstrucciones.getText());
        dirm.setDescripcionMP(cbxDescripcionMP.getSelectedItem().toString());
        dirm.setCalibreLamina(cbxLamina.getSelectedItem().toString());
        dirm.setInspector(cbxNombreInspector.getSelectedItem().toString());
    }

    private void cerrarVentana() {
        HojaInstruccionGUI.this.dispose();
        Conexion.getInstance().desconectar(conexion);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HojaInstruccionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> { // Crea y muestra el form
            new HojaInstruccionGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContinuar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbxDescripcionMP;
    private javax.swing.JComboBox<String> cbxLamina;
    private javax.swing.JComboBox<String> cbxNombreInspector;
    private javax.swing.JComboBox<String> cbxObservacionesMP;
    private javax.swing.JCheckBox chkAceptacion;
    private javax.swing.JCheckBox chkRechazo;
    private com.toedter.calendar.JDateChooser dchFechaInspeccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCalibreLamina;
    private javax.swing.JLabel lblDescripcionMPR;
    private javax.swing.JLabel lblDisposicionMateriaPrima;
    private javax.swing.JLabel lblFechaInspeccion;
    private javax.swing.JLabel lblHojaInstrucciones;
    private javax.swing.JLabel lblInstruccionesInspeccion;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblLecturaMuestreo;
    private javax.swing.JLabel lblNota;
    private javax.swing.JLabel lblObeservacionesResultados;
    private javax.swing.JLabel lblPunto1;
    private javax.swing.JLabel lblPunto2;
    private javax.swing.JTable tblAnchoLargo;
    private javax.swing.JTable tblRugosidadDureza;
    private javax.swing.JTextField txtHojaInstrucciones;
    private javax.swing.JTextField txtObservacionesRD;
    // End of variables declaration//GEN-END:variables
}
