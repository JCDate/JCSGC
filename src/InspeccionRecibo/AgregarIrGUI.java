package InspeccionRecibo;

import Modelos.InspeccionReciboM;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.GeneradorExcel;
import Servicios.InspeccionReciboServicio;
import Servicios.Utilidades;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class AgregarIrGUI extends javax.swing.JFrame {
    
    // Atributos
    private Usuarios usuario; // Usuario autenticado en la aplicación
    private Connection conexion; // Conexión a la Base de Datos
    private GeneradorExcel excel; // Servicio para generar archivos de excel
    private String rutaArchivoFactura; // Ruta del archivo del factura
    private InspeccionReciboServicio irs; // Servicio para manejar la inspección y recibo
    private String rutaArchivoCertificado; // Ruta del archivo del certificado
    private List<String> listaProveedores; // Obtiene la lista de proveedores
    private String rutaArchivoHojaInstruccion; // Ruta del archivo de la Hoja de Instrucción
    private InspeccionReciboM inspeccionRecibo; // Objeto para manejar la información de la inspección de componentes

    public AgregarIrGUI() {
        initComponents();
    }

    public AgregarIrGUI(Usuarios usuario) {
        this.usuario = usuario;
        this.inspeccionRecibo = new InspeccionReciboM();
        inicializarVentanaYComponentes();
    }

    @Override
    public Image getIconImage() { // Método para cambiar el icono en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblFechaFactura = new javax.swing.JLabel();
        lblProveedor = new javax.swing.JLabel();
        lblNoPedido = new javax.swing.JLabel();
        lblCalibre = new javax.swing.JLabel();
        lblNoRollo = new javax.swing.JLabel();
        lblPzKg = new javax.swing.JLabel();
        lblEstatus = new javax.swing.JLabel();
        lblHojaInstruccion = new javax.swing.JLabel();
        lblPresentacionLamina = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        btnGuardar = new swing.Button(new Color(121, 190, 255),new Color(10, 110, 255));
        lblNoFactura = new javax.swing.JLabel();
        dchFechaFactura = new com.toedter.calendar.JDateChooser();
        btnAgregarCertificado = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        lblJCIcono = new javax.swing.JLabel();
        lblAgregar = new javax.swing.JLabel();
        btnAgregarFactura = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        txtNoRollo = new swing.TextField();
        txtPzKg = new swing.TextField();
        txtNoFactura = new swing.TextField();
        txtCalibre = new swing.TextField();
        txtNoPedido = new swing.TextField();
        txtNoHoja = new swing.TextField();
        txtNombreCertificado = new swing.TextField();
        txtNombreFactura = new swing.TextField();
        btnAgregarHojaInstruccion = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));
        txtNombreHojaInstruccion = new swing.TextField();
        cbxPresentacionLamina = new swing.ComboBoxSuggestion();
        cbxProveedor = new swing.ComboBoxSuggestion();
        cbxEstatus = new swing.ComboBoxSuggestion();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(830, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFechaFactura.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFechaFactura.setForeground(new java.awt.Color(76, 109, 255));
        lblFechaFactura.setText("FECHA DE FACTURA:");
        jPanel1.add(lblFechaFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 160, -1));

        lblProveedor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProveedor.setForeground(new java.awt.Color(76, 109, 255));
        lblProveedor.setText("PROVEEDOR:");
        jPanel1.add(lblProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 100, -1));

        lblNoPedido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoPedido.setForeground(new java.awt.Color(76, 109, 255));
        lblNoPedido.setText("NO. PEDIDO:");
        jPanel1.add(lblNoPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, -1, -1));

        lblCalibre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCalibre.setForeground(new java.awt.Color(76, 109, 255));
        lblCalibre.setText("CALIBRE:");
        jPanel1.add(lblCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 140, -1));

        lblNoRollo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoRollo.setForeground(new java.awt.Color(76, 109, 255));
        lblNoRollo.setText("NO. ROLLO:");
        jPanel1.add(lblNoRollo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 210, -1));

        lblPzKg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPzKg.setForeground(new java.awt.Color(76, 109, 255));
        lblPzKg.setText("PZ/Kg:");
        jPanel1.add(lblPzKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 210, -1));

        lblEstatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEstatus.setForeground(new java.awt.Color(76, 109, 255));
        lblEstatus.setText("ESTATUS:");
        jPanel1.add(lblEstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 210, -1));

        lblHojaInstruccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblHojaInstruccion.setForeground(new java.awt.Color(76, 109, 255));
        lblHojaInstruccion.setText("<html>NO. HOJA DE <br>INSTRUCCIONES: </html>");
        jPanel1.add(lblHojaInstruccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, -1, -1));

        lblPresentacionLamina.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPresentacionLamina.setForeground(new java.awt.Color(76, 109, 255));
        lblPresentacionLamina.setText("PRESENTACIÓN DE LAMINA:");
        jPanel1.add(lblPresentacionLamina, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, -1, -1));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/boton_regresar.png"))); // NOI18N
        btnCerrar.setBorderPainted(false);
        btnCerrar.setContentAreaFilled(false);
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 560, -1, 60));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Guardar.png"))); // NOI18N
        btnGuardar.setText("GUARDAR  ");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 550, 160, 60));

        lblNoFactura.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNoFactura.setForeground(new java.awt.Color(76, 109, 255));
        lblNoFactura.setText("NO. FACTURA:");
        jPanel1.add(lblNoFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 140, -1));
        jPanel1.add(dchFechaFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 170, -1));

        btnAgregarCertificado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAgregarCertificado.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarCertificado.setText("Agregar Certificado");
        btnAgregarCertificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCertificadoActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarCertificado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 180, 40));

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        lblJCIcono.setToolTipText("");
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblAgregar.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        lblAgregar.setForeground(new java.awt.Color(10, 110, 255));
        lblAgregar.setText("AGREGAR");
        jPanel1.add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 260, 50));

        btnAgregarFactura.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAgregarFactura.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarFactura.setText("Agregar Factura");
        btnAgregarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFacturaActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 383, 150, 40));
        jPanel1.add(txtNoRollo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 270, -1));
        jPanel1.add(txtPzKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 290, -1));
        jPanel1.add(txtNoFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 250, -1));
        jPanel1.add(txtCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 280, -1));
        jPanel1.add(txtNoPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, 250, -1));

        txtNoHoja.setEditable(false);
        jPanel1.add(txtNoHoja, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 340, 210, -1));

        txtNombreCertificado.setEditable(false);
        jPanel1.add(txtNombreCertificado, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, 180, 30));

        txtNombreFactura.setEditable(false);
        jPanel1.add(txtNombreFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 200, 30));

        btnAgregarHojaInstruccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAgregarHojaInstruccion.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarHojaInstruccion.setText("<html>Agregar Hoja <br>de Instrucción</html>");
        btnAgregarHojaInstruccion.setToolTipText("");
        btnAgregarHojaInstruccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarHojaInstruccionActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarHojaInstruccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 180, 40));

        txtNombreHojaInstruccion.setEditable(false);
        jPanel1.add(txtNombreHojaInstruccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 190, 30));

        cbxPresentacionLamina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CINTA", "HOJA" }));
        jPanel1.add(cbxPresentacionLamina, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, 140, -1));

        jPanel1.add(cbxProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, 250, -1));

        cbxEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LIBERADA", "POR LIBERAR", "RECHAZADA", "CERTIFICADO INCOMPLETO", " " }));
        jPanel1.add(cbxEstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 280, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFacturaActionPerformed
        rutaArchivoFactura = seleccionarArchivo(txtNombreFactura, rutaArchivoFactura, "Facturas");
    }//GEN-LAST:event_btnAgregarFacturaActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
        irs.abrirInspeccionReciboGUI(usuario);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtCalibre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingresa el componente");
        } else {
            procesarArchivoXLS();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarCertificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCertificadoActionPerformed
        rutaArchivoCertificado = seleccionarArchivo(txtNombreCertificado, rutaArchivoCertificado, "Certificados");
    }//GEN-LAST:event_btnAgregarCertificadoActionPerformed

    private void btnAgregarHojaInstruccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarHojaInstruccionActionPerformed
        rutaArchivoHojaInstruccion = seleccionarArchivo(txtNombreHojaInstruccion, rutaArchivoHojaInstruccion, "HojasInstruccion");
    }//GEN-LAST:event_btnAgregarHojaInstruccionActionPerformed

    private void inicializarVentanaYComponentes() {
        try {
            configurarVentana();
            inicializarConexion();
            inicializarServicios();
            cargarProveedores();
            generarCodigoHoja();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("ERROR al Abrir AgregarIrGUI: ", ex);
            Logger.getLogger(AgregarIrGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configurarVentana() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    private void inicializarConexion() throws SQLException {
        this.conexion = Conexion.getInstance().conectar();
    }

    private void inicializarServicios() {
        this.excel = new GeneradorExcel();
        this.irs = new InspeccionReciboServicio();
    }

    private void cargarProveedores() throws SQLException {
        listaProveedores = irs.obtenerProveedores(conexion);
        listaProveedores.forEach(cbxProveedor::addItem);
    }

    private void generarCodigoHoja() throws SQLException {
        txtNoHoja.setText(irs.generarCodigoDeHoja());
    }

    private void procesarArchivoXLS() {
        Date fechaSeleccionada = dchFechaFactura.getDate(); // Obtener la fecha seleccionada en el campo de fecha de factura

        String noHoja = txtNoHoja.getText().trim(); // Se obtiene el no de hoja de inspección correspondiente
        capturarDatosInspeccionRecibo(noHoja);

        if (fechaSeleccionada == null) { // Si no hay fecha Capturada...
            procesarArchivoExcel(noHoja);
        } else {
            procesarDatosCapturados(fechaSeleccionada, noHoja);
        }
    }

    private void capturarDatosInspeccionRecibo(String noHoja) {
        inspeccionRecibo.setNoHoja(noHoja);
        inspeccionRecibo.setCalibre(txtCalibre.getText().trim());
        inspeccionRecibo.setpLamina(cbxPresentacionLamina.getSelectedItem().toString());
        inspeccionRecibo.setEstatus(cbxEstatus.getSelectedItem().toString());
        inspeccionRecibo.setNombreHojaInstruccion(txtNombreHojaInstruccion.getText().trim());
    }

    private void procesarArchivoExcel(String noHoja) {
        try {
            
            File archivoSeleccionado = new File("\\\\" + Utilidades.SERVIDOR + "/archivos/inspeccionrecibo/hojasinstruccion/" + txtNombreHojaInstruccion.getText());

            XSSFWorkbook workbook;
            try (FileInputStream fis = new FileInputStream(archivoSeleccionado)) {
                workbook = new XSSFWorkbook(fis); // Leer el archivo de excel
                XSSFSheet hoja1 = workbook.getSheetAt(0); // Se obtiene la primera hoja del archivo
                excel.setDatosCeldas(hoja1, 5, 2, noHoja); // Se modifica 
                cargarDatosDesdeExcel(hoja1);
            }

            try (FileOutputStream fos = new FileOutputStream(archivoSeleccionado)) {
                workbook.write(fos);
            }

            if (irs.existeNoRollo(conexion, txtNoRollo.getText())) {
                JOptionPane.showMessageDialog(this, "Rollo registrado previamente");
            }
            guardarDatos();

        } catch (IOException e) {
            Utilidades.manejarExcepcion("ERROR al procesar Archivo Excel: ", e);
            Logger.getLogger(AgregarIrGUI.class.getName()).log(Level.SEVERE, null, e);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "El documento esta abierto o esta siendo utilizado por otro proceso");
        }
    }

    private void cargarDatosDesdeExcel(XSSFSheet hoja1) {
        DataFormatter formatter = new DataFormatter();
        Cell celdaFechaFactura = hoja1.getRow(9).getCell(8);
        String formatoFecha = formatter.formatCellValue(celdaFechaFactura);

        inspeccionRecibo.setFechaFactura(formatoFecha);
        inspeccionRecibo.setProveedor(excel.getDatosCeldas(hoja1, 9, 4));
        inspeccionRecibo.setNoFactura(excel.getDatosCeldas(hoja1, 9, 6));
        inspeccionRecibo.setNoPedido(excel.getDatosCeldas(hoja1, 13, 3));
        inspeccionRecibo.setNoRollo(excel.getDatosCeldas(hoja1, 13, 5));
        inspeccionRecibo.setPzKg(excel.getDatosCeldas(hoja1, 13, 7));
    }

    private void guardarDatos() {
        try {
            irs.agregarInspeccion(conexion, inspeccionRecibo);
            JOptionPane.showMessageDialog(this, "DATOS GUARDADOS.");
            cerrarVentana();
            irs.abrirInspeccionReciboGUI(usuario);
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("ERROR al guardar la información: ", ex);
            Logger.getLogger(AgregarIrGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void procesarDatosCapturados(Date fechaSeleccionada, String noHoja) {
        String fechaFactura = irs.formatearFecha(fechaSeleccionada);
        inspeccionRecibo.setFechaFactura(fechaFactura);
        inspeccionRecibo.setProveedor(cbxProveedor.getSelectedItem().toString());
        inspeccionRecibo.setNoFactura(txtNoFactura.getText().trim());
        inspeccionRecibo.setNoPedido(txtNoPedido.getText().trim());
        inspeccionRecibo.setNoRollo(txtNoRollo.getText().trim());
        inspeccionRecibo.setPzKg(txtPzKg.getText().trim());
        inspeccionRecibo.setNombreHojaInstruccion(txtNombreHojaInstruccion.getText());
        inspeccionRecibo.setNombreFact(txtNombreFactura.getText());
        inspeccionRecibo.setNombreCert(txtNombreCertificado.getText());

        if (validarCampos(inspeccionRecibo)) {
            irs.validarArchivos(rutaArchivoCertificado, rutaArchivoFactura, rutaArchivoHojaInstruccion, inspeccionRecibo);
            guardarDatos();
        } else {
            JOptionPane.showMessageDialog(null, "DATOS INCOMPLETOS");
        }
    }

    private boolean validarCampos(InspeccionReciboM inspeccionRecibo) {
        return !inspeccionRecibo.getProveedor().isEmpty()
                && !inspeccionRecibo.getNoFactura().isEmpty()
                && !inspeccionRecibo.getNoPedido().isEmpty()
                && !inspeccionRecibo.getCalibre().isEmpty()
                && !inspeccionRecibo.getpLamina().isEmpty()
                && !inspeccionRecibo.getNoRollo().isEmpty()
                && !inspeccionRecibo.getPzKg().isEmpty()
                && !inspeccionRecibo.getFechaFactura().isEmpty();
    }

    private String seleccionarArchivo(JTextField textField, String rutaArchivo, String tipoArchivo) {
        File archivoSeleccionado = irs.seleccionarArchivo(this);
        if (archivoSeleccionado != null) {
            try {
                String nombreArchivo = archivoSeleccionado.getName(); // Obtener el nombre del archivo
                Files.copy(archivoSeleccionado.toPath(), Paths.get("\\\\" + Utilidades.SERVIDOR + "\\archivos\\InspeccionRecibo\\" + tipoArchivo + "\\" + archivoSeleccionado.getName()), StandardCopyOption.REPLACE_EXISTING); // Copiar el archivo al servidor
                textField.setText(nombreArchivo);
                rutaArchivo = "archivos\\InspeccionRecibo\\" + tipoArchivo + "\\" + archivoSeleccionado.getName();
            } catch (IOException ex) {
                Utilidades.manejarExcepcion("ERROR al guardar el archivo: ", ex);
                Logger.getLogger(AgregarIrGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return rutaArchivo;
    }

    private void cerrarVentana() {
        AgregarIrGUI.this.dispose();
        Conexion.getInstance().desconectar(conexion);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarIrGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AgregarIrGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCertificado;
    private javax.swing.JButton btnAgregarFactura;
    private javax.swing.JButton btnAgregarHojaInstruccion;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbxEstatus;
    private javax.swing.JComboBox<String> cbxPresentacionLamina;
    private javax.swing.JComboBox<String> cbxProveedor;
    private com.toedter.calendar.JDateChooser dchFechaFactura;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblCalibre;
    private javax.swing.JLabel lblEstatus;
    private javax.swing.JLabel lblFechaFactura;
    private javax.swing.JLabel lblHojaInstruccion;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblNoFactura;
    private javax.swing.JLabel lblNoPedido;
    private javax.swing.JLabel lblNoRollo;
    private javax.swing.JLabel lblPresentacionLamina;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblPzKg;
    private javax.swing.JTextField txtCalibre;
    private javax.swing.JTextField txtNoFactura;
    private javax.swing.JTextField txtNoHoja;
    private javax.swing.JTextField txtNoPedido;
    private javax.swing.JTextField txtNoRollo;
    private javax.swing.JTextField txtNombreCertificado;
    private javax.swing.JTextField txtNombreFactura;
    private javax.swing.JTextField txtNombreHojaInstruccion;
    private javax.swing.JTextField txtPzKg;
    // End of variables declaration//GEN-END:variables
}
