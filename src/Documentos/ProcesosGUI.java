package Documentos;

import Modelos.Iconos;
import Modelos.ProcedimientosM;
import Modelos.ProcesosM;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.ControlDocumentacionServicio;
import Servicios.imgTabla;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import swing.Button;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ProcesosGUI extends javax.swing.JFrame {

    private Usuarios usr;
    private ProcesosM proceso;
    private Connection conexion;
    private DefaultTableModel modeloTabla;
    private List<ProcedimientosM> listaProcedimientos = new ArrayList<>();

    private ControlDocumentacionServicio cds = new ControlDocumentacionServicio();

    public ProcesosGUI() {
        try {
            inicializarVentanaYComponentes(0);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ProcesosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ProcesosGUI(Usuarios usr, int idProceso) {
        try {
            this.usr = usr;
            inicializarVentanaYComponentes(idProceso);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ProcesosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ProcesosGUI(Usuarios usr) {
        this.usr = usr;
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJCIcono = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        btnCerrar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProcedimientos = new javax.swing.JTable();
        btnDiagramaTortuga = new swing.Button(new Color(255, 199, 114),new Color(255, 170, 39));
        btnSolicitudCambio = new swing.Button(new Color(255, 214, 125),new Color(255, 200, 81));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setForeground(new java.awt.Color(242, 242, 242));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblTitulo.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(10, 110, 255));
        lblTitulo.setText("PROCESO: ");
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 130, 50));

        tblProcedimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NO", "CÓDIGO", "REVISIÓN", "PROCESO", "DUEÑO(A) DE PROCESO", "VER DOCUMENTOS", "REGISTROS"
            }
        ));
        tblProcedimientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProcedimientosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProcedimientos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 1230, 350));

        btnDiagramaTortuga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/powerpoint.png"))); // NOI18N
        btnDiagramaTortuga.setToolTipText("");
        btnDiagramaTortuga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagramaTortugaActionPerformed(evt);
            }
        });
        jPanel1.add(btnDiagramaTortuga, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 10, 80, 80));

        btnSolicitudCambio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSolicitudCambio.setForeground(new java.awt.Color(255, 255, 255));
        btnSolicitudCambio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Ordenes.png"))); // NOI18N
        btnSolicitudCambio.setText("SOLICITUD DE CAMBIO");
        btnSolicitudCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitudCambioActionPerformed(evt);
            }
        });
        jPanel1.add(btnSolicitudCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 480, 300, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
        cds.abrirControlDocumentosGUI(usr);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void tblProcedimientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProcedimientosMouseClicked
        int columnaSeleccionada = tblProcedimientos.getColumnModel().getColumnIndexAtX(evt.getX());
        int filaSeleccionada = tblProcedimientos.rowAtPoint(evt.getPoint());
        String textoPrimeraCelda = "";

        if (filaSeleccionada < tblProcedimientos.getRowCount() && filaSeleccionada >= 0 && columnaSeleccionada < tblProcedimientos.getColumnCount() && columnaSeleccionada >= 0) {// Si las coordenadas estan dentro de los limites de la tabla... 
            String id = (String) tblProcedimientos.getValueAt(filaSeleccionada, 0); // Se guarda el valor de la celda (row,0) en la primera columna
            int posicion = -1;

            for (int i = 0; i < listaProcedimientos.size(); i++) {
                ProcedimientosM elemento = this.listaProcedimientos.get(i);
                if (elemento.getNo().equals(id)) {
                    posicion = i;
                    break;
                }
            }

            Object value = tblProcedimientos.getValueAt(filaSeleccionada, columnaSeleccionada);
            if (value instanceof JButton) {

                JButton boton = (JButton) value;
                String textoBoton = boton.getText();

                // Get the text from the first cell (column 0) of the selected row
                Object firstCellValue = tblProcedimientos.getValueAt(filaSeleccionada, 0);
                if (firstCellValue != null) {
                    textoPrimeraCelda = firstCellValue.toString();
                }

                switch (textoBoton) {
                    case "Vacío":
                        JOptionPane.showMessageDialog(null, "No hay documentos");
                        break;
                    default:
                            if (columnaSeleccionada == 5) {
                                ProcesosGUI.this.dispose();
                                ProcedimientosGUI proc;
                                try {
                                    proc = new ProcedimientosGUI(usr, listaProcedimientos.get(posicion));
                                    proc.setVisible(true);
                                    proc.setLocationRelativeTo(null);
                                } catch (SQLException | ClassNotFoundException ex) {
                                    Logger.getLogger(ProcesosGUI.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            } else if (columnaSeleccionada == 6) {
                                cds.abrirRegistrosGUI(usr, listaProcedimientos.get(posicion));
                            }

                        break;
                }

            }
        }
    }//GEN-LAST:event_tblProcedimientosMouseClicked

    private void btnDiagramaTortugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagramaTortugaActionPerformed
        try {
            cds.ejecutarDiagramaTortuga(proceso);
            Desktop.getDesktop().open(new File(proceso.getNombreDT()));
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            Logger.getLogger(ProcesosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDiagramaTortugaActionPerformed

    private void btnSolicitudCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitudCambioActionPerformed
        cerrarVentana();
        cds.abrirSolicitudGUI(usr, proceso);
    }//GEN-LAST:event_btnSolicitudCambioActionPerformed

    private void inicializarVentanaYComponentes(int idProceso) throws SQLException, ClassNotFoundException {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.conexion = Conexion.getInstance().getConnection();
        this.proceso = cds.recuperarProceso(conexion, idProceso);
        

        if (usr.getId() == proceso.getUid() || usr.getId() == 8) {
            btnSolicitudCambio.setVisible(true);
        } else {
            btnSolicitudCambio.setVisible(false);
        }

        lblTitulo.setText("PROCESO: " + proceso.getProceso());

        this.modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        DefaultTableModel tableModel = construirModeloTabla();
        tblProcedimientos.setModel(tableModel);
        tblProcedimientos.setRowHeight(40);
        mostrarDatosTabla();
    }

    private DefaultTableModel construirModeloTabla() {
        modeloTabla.addColumn("NO");
        modeloTabla.addColumn("CODIGO");
        modeloTabla.addColumn("REVISIÓN");
        modeloTabla.addColumn("PROCEDIMIENTO");
        modeloTabla.addColumn("DUEÑO DE PROCESO");
        modeloTabla.addColumn("VER DOCUMENTOS");
        modeloTabla.addColumn("REGISTROS");
        return modeloTabla;
    }

    public void mostrarDatosTabla() throws SQLException, ClassNotFoundException {
        modeloTabla.setRowCount(0);
        listaProcedimientos = cds.recuperarProcedimientos(conexion, proceso.getId());
        Button boton = new Button();
        Button boton2 = new Button();
        boton.setIcon(Iconos.ICONO_VER);
        boton2.setIcon(Iconos.ICONO_SOLICITUD);
        if (listaProcedimientos != null) {
            listaProcedimientos.stream().map((procedimiento) -> { // Se utiliza la expresión lambda y las funcion stream para el manejo de la información
                Object fila[] = new Object[7];
                fila[0] = procedimiento.getNo();
                fila[1] = procedimiento.getCodigo();
                fila[2] = procedimiento.getRevision();
                fila[3] = procedimiento.getProcedimiento();
                fila[4] = procedimiento.getEncargado();
                fila[5] = boton;
                fila[6] = boton2;
                return fila;
            }).forEachOrdered((fila) -> { // Cada elemento que se encuentra se agrega como fila a la tabla
                modeloTabla.addRow(fila);
            });
        }
        tblProcedimientos.setDefaultRenderer(Object.class, new imgTabla());
    }

    public void cerrarVentana() {
        ProcesosGUI.this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcesosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ProcesosGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnDiagramaTortuga;
    private javax.swing.JButton btnSolicitudCambio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblProcedimientos;
    // End of variables declaration//GEN-END:variables
}
