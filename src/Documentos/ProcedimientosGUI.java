package Documentos;

import Modelos.DocumentosM;
import Modelos.FormatosM;
import Modelos.Iconos;
import Modelos.ProcedimientosM;
import Modelos.ProcesosM;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.ControlDocumentacionServicio;
import Servicios.imgTabla;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import swing.Button;

public class ProcedimientosGUI extends javax.swing.JFrame {

    private Usuarios usr;
    private ProcedimientosM procedimiento;
    private Connection conexion;
    private DefaultTableModel modeloTabla;
    private List<FormatosM> listFormatos = new ArrayList<>();
    private DocumentosM docManual;
    private DocumentosM docDF;
    private ControlDocumentacionServicio cds = new ControlDocumentacionServicio();

    public ProcedimientosGUI() {
        try {
            inicializarVentanaYComponentes();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ProcedimientosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ProcedimientosGUI(Usuarios usr, ProcedimientosM procedimiento) throws SQLException, ClassNotFoundException {
        this.usr = usr;
        this.procedimiento = procedimiento;
        inicializarVentanaYComponentes();
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJCIcono = new javax.swing.JLabel();
        lblProcedimiento = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocumentos = new javax.swing.JTable();
        btnCerrar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFormatos = new javax.swing.JTable();
        lblFormatos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setForeground(new java.awt.Color(242, 242, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblProcedimiento.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        lblProcedimiento.setForeground(new java.awt.Color(10, 110, 255));
        lblProcedimiento.setText("Procedimiento:");
        jPanel1.add(lblProcedimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 880, 60));

        tblDocumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "TIPO DE DOCUMENTO", "FECHA DE ACTUALIZACIÓN", "NOMBRE", "ARCHIVO"
            }
        ));
        tblDocumentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDocumentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDocumentos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 1170, 170));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 130, 50));

        tblFormatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NOMBRE", "ARCHIVO"
            }
        ));
        jScrollPane2.setViewportView(tblFormatos);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 1170, 170));

        lblFormatos.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        lblFormatos.setForeground(new java.awt.Color(10, 110, 255));
        lblFormatos.setText("Formatos:");
        jPanel1.add(lblFormatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(10, 110, 255));
        jLabel1.setText("Documentos:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDocumentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDocumentosMouseClicked
        int columnaSeleccionada = tblDocumentos.getColumnModel().getColumnIndexAtX(evt.getX());
        int filaSeleccionada = tblDocumentos.rowAtPoint(evt.getPoint());

        if (esCeldaValida(columnaSeleccionada, filaSeleccionada)) {// Si las coordenadas estan dentro de los limites de la tabla... 
            Object value = tblDocumentos.getValueAt(filaSeleccionada, columnaSeleccionada); // Se obtiene el valor de la celda en la columna y fila especificados
            if (value instanceof JButton) { // Si el valor de la celda es un boton...
                JButton boton = (Button) value;
                String textoBoton = boton.getText(); // Se obtiene el texto del boton
                switch (textoBoton) { // Según el texto del boton...
                    case "Vacío":
                        JOptionPane.showMessageDialog(null, "No hay archivo");
                        break;
                    default:
                        try {
                            if (columnaSeleccionada == 1) { // Si le dio a ver factura o ver certificado
                                cds.ejecutarManual(procedimiento.getIdp());
                                Desktop.getDesktop().open(new File("Manual.doc"));
                            }
                        } catch (ClassNotFoundException | SQLException | IOException ex) {
                            Logger.getLogger(ProcedimientosGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                }
            }
        }
    }//GEN-LAST:event_tblDocumentosMouseClicked

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
//        cds.abrirDocumentacionGUI(usr, proceso.getProceso());
    }//GEN-LAST:event_btnCerrarActionPerformed

    public void cerrarVentana() {
        ProcedimientosGUI.this.dispose();
    }

    private void inicializarVentanaYComponentes() throws SQLException, ClassNotFoundException {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.conexion = Conexion.getInstance().getConnection();
        lblProcedimiento.setText("<html>PROCEDIMIENTO: <br>" + procedimiento.getProcedimiento() + "</html>");

        this.modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

//        docManual = cds.recuperarManual(conexion, procedimiento.getId());
//        docDF = cds.recuperarDiagramaFlujo(conexion, procedimiento.getId());

        /*
            recuperarInstructivos
         */
        DefaultTableModel tblModeloDocumentos = construirTblDocumentos();
        DefaultTableModel tblModeloFormatos = construirTblFormatos();
        tblDocumentos.setModel(tblModeloDocumentos);
        tblDocumentos.setRowHeight(40);
        
        tblFormatos.setModel(tblModeloFormatos);
        tblFormatos.setRowHeight(40);
//        mostrarDatosTabla();
    }

    private DefaultTableModel construirTblDocumentos() {
        modeloTabla.addColumn("TIPO DE DOCUMENTO");
        modeloTabla.addColumn("FECHA DE ACTUALIZACIÓN");
        modeloTabla.addColumn("NOMBRE");
        modeloTabla.addColumn("ARCHIVO");
        return modeloTabla;
    }
    
    private DefaultTableModel construirTblFormatos() {
        modeloTabla.addColumn("FECHA DE ACTUALIZACIÓN");
        modeloTabla.addColumn("NOMBRE");
        modeloTabla.addColumn("ARCHIVO");
        return modeloTabla;
    }

    private boolean esCeldaValida(int columnaSeleccionada, int filaSeleccionada) {
        return filaSeleccionada < tblDocumentos.getRowCount() && filaSeleccionada >= 0 && columnaSeleccionada < tblDocumentos.getColumnCount() && columnaSeleccionada >= 0;
    }

    public void mostrarDatosTabla() throws SQLException, ClassNotFoundException {
        modeloTabla.setRowCount(0);
        
        Button boton = new Button();
        boton.setIcon(Iconos.ICONO_VER);

        Object fila[] = new Object[6];
        fila[0] = docManual.getFechaActualizacion();
        fila[1] = cds.crearBoton(docManual.getContenido(), Iconos.ICONO_WORD, "Vacío");
        fila[2] = cds.crearBoton(docDF.getContenido(), Iconos.ICONO_WORD, "Vacío");
        fila[3] = "instructivos";
        fila[4] = "formatos";
        fila[5] = "registros";

        modeloTabla.addRow(fila);

        tblDocumentos.setDefaultRenderer(Object.class, new imgTabla());
    }

    public Image getImage(String ruta) {
        try {
            ImageIcon imageIcon = new ImageIcon(getClass().getResource(ruta)); //Se crea un objeto de la clase ImageIcon y se obtiene la dirección de la ruta
            Image mainIcon = imageIcon.getImage(); // Se obtiene la imagen
            return mainIcon; // Se retorna 

        } catch (Exception e) {
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcedimientosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ProcedimientosGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFormatos;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblProcedimiento;
    private javax.swing.JTable tblDocumentos;
    private javax.swing.JTable tblFormatos;
    // End of variables declaration//GEN-END:variables
}
