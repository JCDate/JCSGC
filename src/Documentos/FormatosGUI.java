package Documentos;

import Modelos.FormatosM;
import Modelos.Iconos;
import Modelos.ProcedimientosM;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.ControlDocumentacionServicio;
import Servicios.Utilidades;
import Servicios.imgTabla;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import swing.Button;

public class FormatosGUI extends javax.swing.JFrame {

    // Atributos
    private Usuarios usuario; // Usuario autenticado en la aplicación
    private Conexion conexion; // Conexión a la Base de Datos
    private ProcedimientosM procedimiento; // Objeto para manejar la documentacion por procedimiento
    private DefaultTableModel modeloTabla; // Definición de la estructura de la tabla
    private List<FormatosM> listaFormatos; // Listas para el control del formato
    private ControlDocumentacionServicio cds; // Listas de información de control de documentación

    // Columnas de la tabla
    private static final int COLUMNA_FORMATOS = 0;
    private static final int COLUMNA_ARCHIVO = 1;

    public FormatosGUI() {
        try {
            inicializarVentanaYComponentes();
        } catch (ClassNotFoundException ex) {
            Utilidades.manejarExcepcion("Error al abrir FormatosGUI: ", ex);
            Logger.getLogger(ProcedimientosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public FormatosGUI(Usuarios usuario, ProcedimientosM procedimiento) {
        this.usuario = usuario;
        this.procedimiento = procedimiento;
        this.conexion = Conexion.getInstance();
        this.listaFormatos = new ArrayList<>();
        this.cds = new ControlDocumentacionServicio();
        try {
            inicializarVentanaYComponentes();
        } catch (ClassNotFoundException ex) {
            Utilidades.manejarExcepcion("Error al abrir FormatosGUI: ", ex);
            Logger.getLogger(FormatosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public Image getIconImage() { // Método para cambiar el icono en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJCIcono = new javax.swing.JLabel();
        lblFormato = new javax.swing.JLabel();
        btnCerrar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFormatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setForeground(new java.awt.Color(242, 242, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        lblFormato.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        lblFormato.setForeground(new java.awt.Color(10, 110, 255));
        lblFormato.setText("FORMATOS DEL PROCESO: ");
        jPanel1.add(lblFormato, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 600, 30));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 130, 50));

        tblFormatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NOMBRE", "VER FORMATO"
            }
        ));
        tblFormatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFormatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblFormatos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 660, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
        cds.abrirProcedimientosGUI(usuario, procedimiento);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void tblFormatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFormatosMouseClicked
        int columnaSeleccionada = tblFormatos.getColumnModel().getColumnIndexAtX(evt.getX());
        int filaSeleccionada = tblFormatos.rowAtPoint(evt.getPoint());

        if (esCeldaValida(filaSeleccionada, columnaSeleccionada)) {
            Object value = tblFormatos.getValueAt(filaSeleccionada, columnaSeleccionada);

            if (value instanceof JButton) {
                JButton boton = (Button) value;
                String textoBoton = boton.getText();
                String id = (String) tblFormatos.getValueAt(filaSeleccionada, 0);

                switch (textoBoton) {
                    case "Vacío":
                        JOptionPane.showMessageDialog(null, "No hay archivo");
                        break;
                    default:
                        try {
                            cds.ejecutarFormato(id);
                        } catch (ClassNotFoundException | SQLException ex) {
                            Logger.getLogger(ProcedimientosGUI.class.getName()).log(Level.SEVERE, "Error al ejecutar formato", ex);
                            JOptionPane.showMessageDialog(null, "Error al ejecutar formato: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        break;
                }
            }
        }
    }//GEN-LAST:event_tblFormatosMouseClicked

    public void cerrarVentana() {
        FormatosGUI.this.dispose();
    }

    private void inicializarVentanaYComponentes() throws ClassNotFoundException {
        configurarVentana();
        lblFormato.setText("<html>FORMATOS DEL PROCESO: <br>" + procedimiento.getProcedimiento() + "</html>");
        inicializarTabla();
    }

    private void inicializarTabla() {
        try {
            this.modeloTabla = construirModeloTabla();
            this.listaFormatos = cds.recuperarFormatos(conexion, procedimiento.getId());
            DefaultTableModel tableModel = construirModeloTabla();
            tblFormatos.setModel(tableModel);
            tblFormatos.setRowHeight(40);
            mostrarDatosTabla();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Error al inicializar laa tabla: ", ex);
            Logger.getLogger(FormatosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private DefaultTableModel construirModeloTabla() {
        final String[] nombresColumnas = {"NOMBRE", "VER DOCUMENTO"};

        modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modeloTabla.setColumnIdentifiers(nombresColumnas);

        return modeloTabla;
    }

    private boolean esCeldaValida(int filaSeleccionada, int columnaSeleccionada) {
        return filaSeleccionada < tblFormatos.getRowCount() && filaSeleccionada >= 0 && columnaSeleccionada < tblFormatos.getColumnCount() && columnaSeleccionada >= 0;
    }

    public void mostrarDatosTabla() {
        limpiarTabla();
        llenarTabla();
        configurarRenderizacionTabla();
    }

    private void configurarRenderizacionTabla() {
        tblFormatos.setDefaultRenderer(Object.class, new imgTabla());
    }

    private void limpiarTabla() {
        modeloTabla.setRowCount(0);
    }

    private void llenarTabla() {
        if (listaFormatos != null && !listaFormatos.isEmpty()) {
            listaFormatos.forEach(formato -> {
                Object[] fila = crearFila(formato);
                modeloTabla.addRow(fila);
            });
        }
    }

    private Object[] crearFila(FormatosM formato) {
        Object[] fila = new Object[2];
        fila[COLUMNA_FORMATOS] = formato.getNombre();
        fila[COLUMNA_ARCHIVO] = Utilidades.crearBoton(formato.getContenido(), Iconos.ICONO_EXCEL_2, "Vacio");
        return fila;
    }

    private void configurarVentana() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormatosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FormatosGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFormato;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JTable tblFormatos;
    // End of variables declaration//GEN-END:variables
}
