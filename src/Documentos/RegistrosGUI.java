package Documentos;

import Modelos.Usuarios;
import Modelos.ProcedimientosM;
import Modelos.RegistrosM;
import Servicios.Conexion;
import Servicios.ControlDocumentacionServicio;
import Servicios.Utilidades;
import Servicios.imgTabla;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

public class RegistrosGUI extends javax.swing.JFrame {

    // Atributos
    private Usuarios usuario; // Usuario autenticado en la aplicación
    private Connection conexion; // Conexión a la Base de Datos
    private ProcedimientosM procedimiento; // Objeto para manejar la documentacion por procedimientos
    private DefaultTableModel modeloTabla; // Definición de la estructura de la tabla
    private List<RegistrosM> listaRegistros; // Lista de procedimientos
    private ControlDocumentacionServicio cds; // Listas de información de control de documentación

    // Columnas de la tabla
    private static final int COLUMNA_FECHA = 0;
    private static final int COLUMNA_CODIGO = 1;
    private static final int COLUMNA_PROCESO = 2;
    private static final int COLUMNA_PROCEDIMIENTO = 3;
    private static final int COLUMNA_REV_ANTERIOR = 4;
    private static final int COLUMNA_REV_NUEVA = 5;
    private static final int COLUMNA_ENCARGADO = 6;
    private static final int COLUMNA_ACCION = 7;
    private static final int COLUMNA_TIPO_ARCHIVO = 8;
    private static final int COLUMNA_NOMBRE = 9;
    
    public RegistrosGUI() {
        inicializarVentanaYComponentes();
    }
    
    public RegistrosGUI(Usuarios usuario, ProcedimientosM procedimiento) {
        this.usuario = usuario;
        this.procedimiento = procedimiento;
        this.listaRegistros = new ArrayList<>();
        inicializarVentanaYComponentes();
    }
    
    @Override
    public Image getIconImage() { // Método para cambiar el icono en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJCIcono = new javax.swing.JLabel();
        lblRegistroCambio = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRegistros = new javax.swing.JTable();
        btnCerrar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setForeground(new java.awt.Color(242, 242, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lblRegistroCambio.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        lblRegistroCambio.setForeground(new java.awt.Color(10, 110, 255));
        lblRegistroCambio.setText("REGISTROS DE CAMBIOS");
        jPanel1.add(lblRegistroCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        tblRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "FECHA", "CÓDIGO", "PROCESO", "PROCEDIMIENTO", "REV. ANTERIOR", "REV. NUEVA", "ENCARGADO", "ACCIÓN", "ARCHIVO", "NOMBRE"
            }
        ));
        jScrollPane1.setViewportView(tblRegistros);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 980, 360));

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.setToolTipText("");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 130, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrarVentana();
    }//GEN-LAST:event_btnCerrarActionPerformed
    
    private void inicializarVentanaYComponentes() {
        try {
            configurarVentana();
            this.conexion = Conexion.getInstance().conectar();
            this.cds = new ControlDocumentacionServicio();
            inicializarTabla();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Error al abrir RegistrosGUI: ", ex);
            Logger.getLogger(RegistrosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void configurarVentana() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }
    
    private void inicializarTabla() {
        try {
            this.modeloTabla = construirModeloTabla();
            this.listaRegistros = cds.recuperarRegistros(conexion, procedimiento.getId(), usuario);
            tblRegistros.setModel(modeloTabla);
            tblRegistros.setRowHeight(40);
            mostrarDatosTabla();
        } catch (SQLException ex) {
            Utilidades.manejarExcepcion("Error al inicializar laa tabla: ", ex);
            Logger.getLogger(FormatosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private DefaultTableModel construirModeloTabla() {
        final String[] nombresColumnas = {"FECHA", "CÓDIGO", "PROCESO", "PROCEDIMIENTO", "REV. ANTERIOR", "REV. NUEVA", "ENCARGADO",
            "ACCIÓN", "TIPO ARCHIVO", "NOMBRE"};
        
        modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        modeloTabla.setColumnIdentifiers(nombresColumnas);
        return modeloTabla;
    }

    public void mostrarDatosTabla() {
        limpiarTabla();
        llenarTabla();
        configurarRenderizacionTabla();
    }
    
    private void limpiarTabla() {
        modeloTabla.setRowCount(0);
    }
    
    private void llenarTabla() {
        if (listaRegistros != null && !listaRegistros.isEmpty()) {
            listaRegistros.forEach(registro -> {
                Object[] fila = crearFila(registro);
                modeloTabla.addRow(fila);
            });
        }
    }
    
    private Object[] crearFila(RegistrosM registro) {
        Object fila[] = new Object[10];
        fila[COLUMNA_FECHA] = registro.getFecha();
        fila[COLUMNA_CODIGO] = registro.getCodigo();
        fila[COLUMNA_PROCESO] = registro.getProceso();
        fila[COLUMNA_PROCEDIMIENTO] = registro.getProcedimiento();
        fila[COLUMNA_REV_ANTERIOR] = registro.getRevAnterior();
        fila[COLUMNA_REV_NUEVA] = registro.getRevNueva();
        fila[COLUMNA_ENCARGADO] = registro.getEncargado();
        fila[COLUMNA_ACCION] = registro.getAccion();
        fila[COLUMNA_TIPO_ARCHIVO] = registro.getTipoArchivo();
        fila[COLUMNA_NOMBRE] = registro.getNombre();
        return fila;
    }
    
    private void configurarRenderizacionTabla() {
        tblRegistros.setDefaultRenderer(Object.class, new imgTabla());
    }

    public void cerrarVentana() {
        RegistrosGUI.this.dispose();
        Conexion.getInstance().desconectar(conexion);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegistrosGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblRegistroCambio;
    private javax.swing.JTable tblRegistros;
    // End of variables declaration//GEN-END:variables
}
