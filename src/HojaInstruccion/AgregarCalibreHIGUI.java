/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HojaInstruccion;

import Modelos.CalibreIRM;
import Modelos.InspeccionReciboM;
import Modelos.Usuarios;
import Servicios.CalibreIrmServicio;
import Servicios.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author JC
 */
public class AgregarCalibreHIGUI extends javax.swing.JFrame {

    Usuarios usr; // Instancia de la clase Usuarios
    private InspeccionReciboM irm; // Se crea la instancia de inspeccionReciboM
    private CalibreIRM cirm = new CalibreIRM(); // Instancia de la clase CalibreIRM
    private CalibreIrmServicio cirms = new CalibreIrmServicio(); // Instancia de la clase CalibreIrmServicio 
    Connection conexion; // Objeto de tipo Connection para realizar la conexión a la bd
// Consultas
    final String SQL_CONSULTA_ESPECIFICACION = "SELECT Especificacion FROM especificacionesir";

    /**
     * Creates new form AgregarCalibreHIGUI
     */
    public AgregarCalibreHIGUI() {
        initComponents(); // Inicialización de Componentes
    }

    public AgregarCalibreHIGUI(Usuarios usr, InspeccionReciboM irm) throws SQLException, ClassNotFoundException {
        initComponents(); // Inicialización de Componentes
        this.usr = usr; // Asignación de los datos del usuario
        this.irm = irm; // Asignación del atributo InspeccionReciboM
        this.conexion = Conexion.getInstance().getConnection(); // Obtener la conexión a la base de datos usando el Singleton
        // Se realizan las consultas SQL
        try (PreparedStatement consulta2 = conexion.prepareStatement(SQL_CONSULTA_ESPECIFICACION);
                ResultSet resultado2 = consulta2.executeQuery()) {
            while (resultado2.next()) { // Se guardan los calibres en el comboBox
                cbxEspecificaciones.addItem(resultado2.getString("Especificacion"));
            }
        }
    }

    @Override
    public Image getIconImage() { // Método para obtener y cambiar el icono de la aplicación en la barra del titulo
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("jc/img/jc.png")); // Se obtiene la imagen que se quiere poner como icono de la barra 
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblAgregarCalibre = new javax.swing.JLabel();
        lblCalibre = new javax.swing.JLabel();
        txtCalibre = new swing.TextField();
        txtEspecificacion = new swing.TextField();
        lblEspecificacion = new javax.swing.JLabel();
        lblJCIcono = new javax.swing.JLabel();
        btnGuardar = new swing.Button(new Color(121, 190, 255),new Color(10, 110, 255));
        btnCancelar = new swing.Button(new Color(255, 76, 76),new Color(255, 50, 50));
        lblMedidas = new javax.swing.JLabel();
        cbxEspecificaciones = new swing.ComboBoxSuggestion();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAgregarCalibre.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        lblAgregarCalibre.setForeground(new java.awt.Color(10, 110, 255));
        lblAgregarCalibre.setText("<html>Agregar <br>Calibre</html>");
        jPanel1.add(lblAgregarCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        lblCalibre.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblCalibre.setForeground(new java.awt.Color(10, 110, 255));
        lblCalibre.setText("CALIBRE:");
        jPanel1.add(lblCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));
        jPanel1.add(txtCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 450, -1));
        jPanel1.add(txtEspecificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 380, -1));

        lblEspecificacion.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblEspecificacion.setForeground(new java.awt.Color(10, 110, 255));
        lblEspecificacion.setText("ESPECIFICACIÓN:");
        jPanel1.add(lblEspecificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 180, -1));

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Guardar.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(488, 290, 140, 50));

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 150, 50));

        lblMedidas.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblMedidas.setForeground(new java.awt.Color(10, 110, 255));
        lblMedidas.setText("MEDIDAS/TOLERANCIA:");
        jPanel1.add(lblMedidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jPanel1.add(cbxEspecificaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 410, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            goToEspecificacionesGUI(); // Ir a la ventana de EspecificacionesGUI
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AgregarCalibreHIGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String calibres = txtCalibre.getText();
        String medidas = txtEspecificacion.getText();
        String especificacion = cbxEspecificaciones.getSelectedItem().toString();
        if (!calibres.trim().equals("") || !medidas.trim().equals("")) {  // Si los campos NO están vacíos...
            // Se captura la información
            this.cirm.setCalibre(calibres);
            this.cirm.setMedidas(medidas);
            this.cirm.setEspecificacion(especificacion);
            try {
                this.cirms.agregar(conexion, this.cirm); // Se manda a llamar el metodo guardar para almacenar la información en la bd
                JOptionPane.showMessageDialog(this, "DATOS GUARDADOS."); // Si todo salio bien, mandara este mensaje
                goToEspecificacionesGUI();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, "Ha surgido un error y no se ha podido guardar el registro.");
            } catch (ClassNotFoundException ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Ha surgido un error y no se ha podido guardar el registro.");
            }
        } else { // Si los campos estan vacios se muestra el mensaje
            JOptionPane.showMessageDialog(this, "HAY CAMPOS INCOMPLETOS.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void goToEspecificacionesGUI() throws SQLException, ClassNotFoundException {
        AgregarCalibreHIGUI.this.dispose(); // Se liberan los recursos de la interfaz
        EspecificacionesGUI esGUI = new EspecificacionesGUI(usr, irm); // Se crea una instancia de la interfaz gráfica
        esGUI.setVisible(true); // Se hace visible la ventana
        esGUI.setLocationRelativeTo(null); // Indica que la ventana actual se abrirá al centro de la pantalla principal del sistema 
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarCalibreHIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AgregarCalibreHIGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbxEspecificaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAgregarCalibre;
    private javax.swing.JLabel lblCalibre;
    private javax.swing.JLabel lblEspecificacion;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblMedidas;
    private javax.swing.JTextField txtCalibre;
    private javax.swing.JTextField txtEspecificacion;
    // End of variables declaration//GEN-END:variables
}
